// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Slider component should pass down Thumb transform values 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        Object {
          "borderRadius": 2,
        },
        Object {
          "height": 4,
          "width": "100%",
        },
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "borderRadius": 2,
        },
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "height": 4,
          "position": "absolute",
          "width": 0,
        },
      ]
    }
  />
  <AnimatedComponent
    hitSlop={
      Object {
        "bottom": 10,
        "left": 10,
        "right": 10,
        "top": 10,
      }
    }
    onLayout={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        Object {
          "borderRadius": 10,
          "height": 20,
          "position": "absolute",
          "width": 20,
        },
        Object {
          "transform": Array [
            Object {
              "scale": 2,
            },
          ],
        },
        Object {
          "transform": Array [
            Object {
              "translateX": 0,
            },
            Object {
              "translateY": 0,
            },
          ],
        },
      ]
    }
  />
</View>
`;

exports[`Slider component should render vertically 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        Object {
          "borderRadius": 2,
        },
        Object {
          "height": "100%",
          "width": 4,
        },
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "borderRadius": 2,
        },
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "height": 0,
          "position": "absolute",
          "width": 4,
        },
      ]
    }
  />
  <AnimatedComponent
    hitSlop={
      Object {
        "bottom": 10,
        "left": 10,
        "right": 10,
        "top": 10,
      }
    }
    onLayout={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        Object {
          "borderRadius": 10,
          "height": 20,
          "position": "absolute",
          "width": 20,
        },
        undefined,
        Object {
          "transform": Array [
            Object {
              "translateX": 0,
            },
            Object {
              "translateY": 0,
            },
          ],
        },
      ]
    }
  />
</View>
`;

exports[`Slider component should render with ThumbTouchRect 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        Object {
          "borderRadius": 2,
        },
        Object {
          "height": 4,
          "width": "100%",
        },
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "borderRadius": 2,
        },
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "height": 4,
          "position": "absolute",
          "width": 0,
        },
      ]
    }
  />
  <AnimatedComponent
    hitSlop={
      Object {
        "bottom": 10,
        "left": 10,
        "right": 10,
        "top": 10,
      }
    }
    onLayout={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        Object {
          "borderRadius": 10,
          "height": 20,
          "position": "absolute",
          "width": 20,
        },
        undefined,
        Object {
          "transform": Array [
            Object {
              "translateX": 0,
            },
            Object {
              "translateY": 0,
            },
          ],
        },
      ]
    }
  />
</View>
`;

exports[`Slider component should render without issues 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        Object {
          "borderRadius": 2,
        },
        Object {
          "height": 4,
          "width": "100%",
        },
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "borderRadius": 2,
        },
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "height": 4,
          "position": "absolute",
          "width": 0,
        },
      ]
    }
  />
  <AnimatedComponent
    hitSlop={
      Object {
        "bottom": 10,
        "left": 10,
        "right": 10,
        "top": 10,
      }
    }
    onLayout={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        Object {
          "borderRadius": 10,
          "height": 20,
          "position": "absolute",
          "width": 20,
        },
        undefined,
        Object {
          "transform": Array [
            Object {
              "translateX": 0,
            },
            Object {
              "translateY": 0,
            },
          ],
        },
      ]
    }
  />
</View>
`;
