{"version":3,"sources":["../../../src/pricing/__tests__/PricingCard.web.test.js"],"names":["props","component","title","price","color","button","icon","info","enzyme","tests","shallow","snapshot","styleguidist","onButtonPress","console","log","containerStyle","borderWidth","wrapperStyle","titleFont","pricingFont","infoFont","buttonFont","samples","Cards","sectionComponents","PricingCard","describe","it","expect","length","toBe","toMatchSnapshot","backgroundColor"],"mappings":"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","file":"PricingCard.web.test.js","sourcesContent":["import React from 'react';\r\nimport { Text, TouchableHighlight, View } from 'react-native';\r\nimport { shallow } from 'enzyme';\r\nimport toJson from 'enzyme-to-json';\r\nimport parseSamples, {\r\n  assignRef,\r\n  genRefId,\r\n} from 'enzyme-styleguidist-sample-parser';\r\nimport options, {\r\n  snapShot,\r\n  buildJsxForGuideMethod,\r\n  ensureCalled,\r\n  onlyEnsureCalled,\r\n  onlySnapshots,\r\n} from '../../../samples';\r\nimport PricingCard from '../PricingCard';\r\n\r\nconst props = {\r\n  'required props: title, price, color, button, & info': {\r\n    component: PricingCard,\r\n    props: {\r\n      title: 'Title',\r\n      price: '$71',\r\n      color: '#071',\r\n      button: {\r\n        title: 'BUTTON TEXT',\r\n        icon: 'pets',\r\n      },\r\n      info: ['info0', 'info1'],\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  'onButtonPress & required props': {\r\n    component: PricingCard,\r\n    props: {\r\n      title: 'Title',\r\n      price: '$71',\r\n      color: '#071',\r\n      button: {\r\n        title: 'BUTTON TEXT',\r\n        icon: 'pets',\r\n      },\r\n      info: ['info0', 'info1'],\r\n      onButtonPress: () => {\r\n        console.log('button pressed');\r\n      },\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  'containerStyle & required props': {\r\n    component: PricingCard,\r\n    props: {\r\n      title: 'Title',\r\n      price: '$71',\r\n      color: '#071',\r\n      button: {\r\n        title: 'BUTTON TEXT',\r\n        icon: 'pets',\r\n      },\r\n      info: ['info0', 'info1'],\r\n      containerStyle: { borderWidth: 5 },\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  'wrapperStyle & required props': {\r\n    component: PricingCard,\r\n    props: {\r\n      title: 'Title',\r\n      price: '$71',\r\n      color: '#071',\r\n      button: {\r\n        title: 'BUTTON TEXT',\r\n        icon: 'pets',\r\n      },\r\n      info: ['info0', 'info1'],\r\n      wrapperStyle: { borderWidth: 5 },\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  'titleFont & required props': {\r\n    component: PricingCard,\r\n    props: {\r\n      title: 'Title',\r\n      price: '$71',\r\n      color: '#071',\r\n      button: {\r\n        title: 'BUTTON TEXT',\r\n        icon: 'pets',\r\n      },\r\n      info: ['info0', 'info1'],\r\n      titleFont: 'Courier New',\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  'pricingFont & required props': {\r\n    component: PricingCard,\r\n    props: {\r\n      title: 'Title',\r\n      price: '$71',\r\n      color: '#071',\r\n      button: {\r\n        title: 'BUTTON TEXT',\r\n        icon: 'pets',\r\n      },\r\n      info: ['info0', 'info1'],\r\n      pricingFont: 'Courier New',\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  'infoFont & required props': {\r\n    component: PricingCard,\r\n    props: {\r\n      title: 'Title',\r\n      price: '$71',\r\n      color: '#071',\r\n      button: {\r\n        title: 'BUTTON TEXT',\r\n        icon: 'pets',\r\n      },\r\n      info: ['info0', 'info1'],\r\n      infoFont: 'Courier New',\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  'buttonFont & required props': {\r\n    component: PricingCard,\r\n    props: {\r\n      title: 'Title',\r\n      price: '$71',\r\n      color: '#071',\r\n      button: {\r\n        title: 'BUTTON TEXT',\r\n        icon: 'pets',\r\n      },\r\n      info: ['info0', 'info1'],\r\n      buttonFont: 'Courier New',\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n};\r\n\r\nconst samples = {\r\n  props,\r\n};\r\n\r\nparseSamples(\r\n  {\r\n    Cards: { sectionComponents: { PricingCard: { samples } } },\r\n  },\r\n  options\r\n);\r\n\r\ndescribe('PricingCard component', () => {\r\n  it('should render without issues', () => {\r\n    const component = shallow(\r\n      <PricingCard\r\n        info={['1 User', 'Basic Support', 'All Core Features']}\r\n        button={{ title: 'GET STARTED', icon: 'flight-takeoff' }}\r\n      />\r\n    );\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n\r\n  it('should render with props', () => {\r\n    const component = shallow(\r\n      <PricingCard\r\n        title=\"Free\"\r\n        price=\"$0\"\r\n        info={['1 User', 'Basic Support', 'All Core Features']}\r\n        button={{ title: 'GET STARTED', icon: 'flight-takeoff' }}\r\n        titleFont=\"arial\"\r\n        infoFont=\"arial\"\r\n        pricingFont=\"arial\"\r\n        buttonFont=\"arial\"\r\n        containerStyle={{ backgroundColor: 'peru' }}\r\n        wrapperStyle={{ backgroundColor: 'peru' }}\r\n      />\r\n    );\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n});\r\n"]}