{"version":3,"sources":["../../../src/header/__tests__/Header.web.test.js"],"names":["btnCfg","icon","titleCfg","text","props","noProps","component","enzyme","tests","shallow","snapshot","styleguidist","statusBarProps","animated","leftComponent","buildJsx","script","centerComponent","rightComponent","backgroundColor","outerContainerStyles","borderWidth","innerContainerStyles","samples","Misc","sectionComponents","Header","describe","it","expect","length","toBe","toMatchSnapshot","find","first","style","at","hidden"],"mappings":"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","file":"Header.web.test.js","sourcesContent":["import React from 'react';\r\nimport { Text, TouchableHighlight, View } from 'react-native';\r\nimport { Button } from 'react-native';\r\nimport { shallow } from 'enzyme';\r\nimport toJson from 'enzyme-to-json';\r\n\r\nconst btnCfg = { icon: 'home' };\r\nconst titleCfg = { text: 'This is a title' };\r\nimport parseSamples, {\r\n  assignRef,\r\n  genRefId,\r\n} from 'enzyme-styleguidist-sample-parser';\r\nimport options, {\r\n  snapShot,\r\n  buildJsxForGuideMethod,\r\n  ensureCalled,\r\n  onlyEnsureCalled,\r\n  onlySnapshots,\r\n} from '../../../samples';\r\nimport Header from '../Header';\r\nimport NavButton from '../NavButton';\r\nimport Title from '../Title';\r\n\r\nconst props = {\r\n  noProps: {\r\n    component: Header,\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  statusBarProps: {\r\n    component: Header,\r\n    props: { statusBarProps: { animated: true } },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  leftComponent: {\r\n    component: Header,\r\n    props: { statusBarProps: { animated: true } },\r\n    enzyme: {\r\n      buildJsx: () => {\r\n        return <Header leftComponent={<Text>sample component</Text>} />;\r\n      },\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {\r\n      script: `const Text = RN.Text;\\n`,\r\n      buildJsx: () => {\r\n        return <Header leftComponent={<Text>sample component</Text>} />;\r\n      },\r\n    },\r\n  },\r\n  'leftComponent icon': {\r\n    component: Header,\r\n    props: { leftComponent: { icon: 'directions-bike' } },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  centerComponent: {\r\n    component: Header,\r\n    props: { statusBarProps: { animated: true } },\r\n    enzyme: {\r\n      buildJsx: () => {\r\n        return <Header centerComponent={<Text>sample component</Text>} />;\r\n      },\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {\r\n      script: `const Text = RN.Text;\\n`,\r\n      buildJsx: () => {\r\n        return <Header centerComponent={<Text>sample component</Text>} />;\r\n      },\r\n    },\r\n  },\r\n  'centerComponent text': {\r\n    component: Header,\r\n    props: { centerComponent: { text: 'text sample' } },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  rightComponent: {\r\n    component: Header,\r\n    props: { statusBarProps: { animated: true } },\r\n    enzyme: {\r\n      buildJsx: () => {\r\n        return <Header rightComponent={<Text>sample component</Text>} />;\r\n      },\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {\r\n      script: `const Text = RN.Text;\\n`,\r\n      buildJsx: () => {\r\n        return <Header rightComponent={<Text>sample component</Text>} />;\r\n      },\r\n    },\r\n  },\r\n  'rightComponent icon': {\r\n    component: Header,\r\n    props: { rightComponent: { icon: 'pets' } },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  backgroundColor: {\r\n    component: Header,\r\n    props: { backgroundColor: '#071' },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  outerContainerStyles: {\r\n    component: Header,\r\n    props: { outerContainerStyles: { borderWidth: 5 } },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  innerContainerStyles: {\r\n    component: Header,\r\n    props: { innerContainerStyles: { borderWidth: 5 } },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n};\r\n\r\nconst samples = {\r\n  props,\r\n};\r\n\r\nparseSamples(\r\n  {\r\n    Misc: { sectionComponents: { Header: { samples } } },\r\n  },\r\n  options\r\n);\r\n\r\ndescribe('Header Component', () => {\r\n  it('should render without issues', () => {\r\n    const component = shallow(<Header />);\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n\r\n  it('should render children when passed in', () => {\r\n    const component = shallow(\r\n      <Header>\r\n        <Button title=\"Test button\" onPress={() => {}} />\r\n      </Header>\r\n    );\r\n\r\n    expect(component.find('Button').length).toBe(1);\r\n  });\r\n\r\n  it('should render multiple children when passed in', () => {\r\n    const component = shallow(\r\n      <Header>\r\n        <Button title=\"Test button 1\" onPress={() => {}} />\r\n        <Button title=\"Test button 2\" onPress={() => {}} />\r\n      </Header>\r\n    );\r\n\r\n    expect(component.find('Button').length).toBe(2);\r\n  });\r\n\r\n  it('should render left component by passing a config through props', () => {\r\n    const component = shallow(<Header leftComponent={btnCfg} />);\r\n\r\n    expect(component.find(NavButton).length).toBe(1);\r\n  });\r\n\r\n  it('should render left component by passing a component through props', () => {\r\n    const component = shallow(\r\n      <Header\r\n        leftComponent={<Button title=\"Test button\" onPress={() => {}} />}\r\n      />\r\n    );\r\n\r\n    expect(component.find('Button').length).toBe(1);\r\n  });\r\n\r\n  it('should render right component by passing a config through props', () => {\r\n    const component = shallow(<Header rightComponent={btnCfg} />);\r\n\r\n    expect(component.find(NavButton).length).toBe(1);\r\n  });\r\n\r\n  it('should render right component by passing a component through props', () => {\r\n    const component = shallow(\r\n      <Header\r\n        rightComponent={<Button title=\"Test button\" onPress={() => {}} />}\r\n      />\r\n    );\r\n\r\n    expect(component.find('Button').length).toBe(1);\r\n  });\r\n\r\n  it('should render center component by passing a config through props', () => {\r\n    const component = shallow(<Header centerComponent={titleCfg} />);\r\n\r\n    expect(component.find(Title).length).toBe(1);\r\n  });\r\n\r\n  it('should render center component by passing a component through props', () => {\r\n    const component = shallow(\r\n      <Header\r\n        centerComponent={<Button title=\"Test button\" onPress={() => {}} />}\r\n      />\r\n    );\r\n\r\n    expect(component.find('Button').length).toBe(1);\r\n  });\r\n\r\n  it('should allow to pass backgroundColor through prop', () => {\r\n    const component = shallow(<Header backgroundColor=\"#aaa\" />);\r\n\r\n    expect(\r\n      component\r\n        .find('View')\r\n        .first()\r\n        .props().style[1].backgroundColor\r\n    ).toBe('#aaa');\r\n  });\r\n\r\n  it('should allow to pass styles through outerContainerStyles prop', () => {\r\n    const component = shallow(\r\n      <Header outerContainerStyles={{ backgroundColor: '#ccc' }} />\r\n    );\r\n\r\n    expect(\r\n      component\r\n        .find('View')\r\n        .at(0)\r\n        .props().style[2].backgroundColor\r\n    ).toBe('#ccc');\r\n  });\r\n\r\n  it('should allow to pass styles through innerContainerStyles prop', () => {\r\n    const component = shallow(\r\n      <Header innerContainerStyles={{ backgroundColor: '#ccc' }} />\r\n    );\r\n\r\n    expect(\r\n      component\r\n        .find('View')\r\n        .at(1)\r\n        .props().style[1].backgroundColor\r\n    ).toBe('#ccc');\r\n  });\r\n\r\n  it('should accept props for StatusBar', () => {\r\n    const component = shallow(<Header statusBarProps={{ hidden: true }} />);\r\n\r\n    expect(component.find('StatusBar').props().hidden).toBe(true);\r\n  });\r\n});\r\n"]}