{"version":3,"sources":["../../../src/checkbox/__tests__/CheckBox.js"],"names":["describe","it","component","expect","length","toBe","toMatchSnapshot","find","View","jest","fn","props","children","backgroundColor"],"mappings":"AAAA,4B;AACA;AACA,4C;AACA,qC;;AAEAA,SAAS,oBAAT,CAA+B,UAAM;AACnCC,GAAG,8BAAH,CAAmC,UAAM;AACvC,GAAMC,WAAY,oBAAQ,sDAAR,CAAlB;;AAEAC,OAAOD,UAAUE,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,OAAO,2BAAOD,SAAP,CAAP,EAA0BI,eAA1B;AACD,CALD;;AAOAL,GAAG,kDAAH,CAAuD,UAAM;AAC3D,GAAMC,WAAY,oBAAQ,sDAAR,CAAlB;;AAEAC,OAAOD,UAAUK,IAAV,CAAe,kBAAf,EAAmCH,MAA1C,EAAkDC,IAAlD,CAAuD,CAAvD;AACD,CAJD;;AAMAJ,GAAG,uCAAH,CAA4C,UAAM;AAChD,GAAMO,MAAOC,KAAKC,EAAL,EAAb;AACA,GAAMR,WAAY,oBAAQ,kDAAU,UAAWM,IAArB,EAAR,CAAlB;;AAEAL,OAAOD,UAAUK,IAAV,CAAe,MAAf,EAAuBH,MAA9B,EAAsCC,IAAtC,CAA2C,CAA3C;AACD,CALD;;AAOAJ,GAAG,6BAAH,CAAkC,UAAM;AACtC,GAAMC,WAAY,oBAAQ,kDAAU,MAAM,aAAhB,CAA8B,YAA9B,EAAR,CAAlB;;AAEAC,OAAOD,UAAUS,KAAV,GAAkBC,QAAlB,CAA2BD,KAA3B,CAAiCC,QAAjC,CAA0C,CAA1C,EAA6CD,KAA7C,CAAmDC,QAA1D,EAAoEP,IAApE;AACE,aADF;;AAGD,CAND;;AAQAJ,GAAG,qCAAH,CAA0C,UAAM;AAC9C,GAAMC,WAAY;AAChB;AACE,SAAS,cADX;AAEE,aAAa,KAFf;AAGE,eAAgB,CAAEW,gBAAiB,KAAnB,CAHlB,EADgB,CAAlB;;;;AAQAV,OAAOD,UAAUE,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,OAAO,2BAAOD,SAAP,CAAP,EAA0BI,eAA1B;AACD,CAXD;;AAaAL,GAAG,uCAAH,CAA4C,UAAM;AAChD,GAAMC,WAAY;AAChB;AACE,SAAS,cADX;AAEE,cAFF;AAGE,eAAe,MAHjB;AAIE,UAJF;AAKE,WALF,EADgB,CAAlB;;;;AAUAC,OAAOD,UAAUE,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,OAAO,2BAAOD,SAAP,CAAP,EAA0BI,eAA1B;AACD,CAbD;AAcD,CAxDD","file":"CheckBox.js","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport toJson from 'enzyme-to-json';\nimport CheckBox from '../CheckBox';\n\ndescribe('CheckBox Component', () => {\n  it('should render without issues', () => {\n    const component = shallow(<CheckBox />);\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should use TouchableOpacity as default component', () => {\n    const component = shallow(<CheckBox />);\n\n    expect(component.find('TouchableOpacity').length).toBe(1);\n  });\n\n  it('should allow to pass custom component', () => {\n    const View = jest.fn();\n    const component = shallow(<CheckBox component={View} />);\n\n    expect(component.find('View').length).toBe(1);\n  });\n\n  it('should render title in Text', () => {\n    const component = shallow(<CheckBox title=\"Custom Text\" checked />);\n\n    expect(component.props().children.props.children[1].props.children).toBe(\n      'Custom Text'\n    );\n  });\n\n  it('should render with icon and checked', () => {\n    const component = shallow(\n      <CheckBox\n        iconType=\"font-awesome\"\n        checkedColor=\"red\"\n        containerStyle={{ backgroundColor: 'red' }}\n      />\n    );\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render with icon and iconRight', () => {\n    const component = shallow(\n      <CheckBox\n        iconType=\"font-awesome\"\n        iconRight\n        uncheckedColor=\"blue\"\n        rigth\n        center\n      />\n    );\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n});\n"]}