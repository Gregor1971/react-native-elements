{"version":3,"sources":["../../../src/overlay/__tests__/Overlay.web.test.js"],"names":["children","childrenString","getJsx","jsx","propString","console","warn","props","containerStyle","component","isVisible","borderWidth","enzyme","tests","shallow","snapshot","styleguidist","overlayStyle","overlayBackgroundColor","windowBackgroundColor","borderRadius","width","height","fullScreen","samples","Misc","sectionComponents","Overlay"],"mappings":"AAAA,4B;AACA;AACA,sC;AACA;AACA,4C;AACA,iF;;;;AAIA,yC;;;;;;;AAOA,mC;;AAEA,GAAMA,UAAW,yEAAjB;AACA,GAAMC,gDAAN;;AAEA,GAAMC,QAAS,QAATA,OAAS,YAAc;AAC3B,GAAMC;;;;;;;;;;;;;;;;;AAiBKC,UAjBL;AAkBFH,cAlBE,4BAAN;;;;AAsBAI,QAAQC,IAAR,CAAaH,GAAb;AACA,MAAOA,IAAP;AACD,CAzBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,GAAMI,OAAQ;AACZC,eAAgB;AACdC,2BADc;AAEdT,iBAFc;AAGdO,MAAO;AACLG,UAAW,IADN;AAELF,eAAgB,CAAEG,YAAa,CAAf,CAFX,CAHO;;AAOdC,OAAQ;AACNC,MAAO,CAAEC,QAAS,CAAEC,SAAU,uBAAZ,CAAX,CADD,CAPM;;AAUdC,aAAc,EAVA,CADJ;;AAaZC,aAAc;AACZR,2BADY;AAEZT,iBAFY;AAGZO,MAAO;AACLG,UAAW,IADN;AAELO,aAAc,CAAEN,YAAa,CAAf,CAFT,CAHK;;AAOZC,OAAQ;AACNC,MAAO,CAAEC,QAAS,CAAEC,SAAU,uBAAZ,CAAX,CADD,CAPI;;AAUZC,aAAc,EAVF,CAbF;;AAyBZE,uBAAwB;AACtBT,2BADsB;AAEtBT,iBAFsB;AAGtBO,MAAO;AACLG,UAAW,IADN;AAELQ,uBAAwB,MAFnB,CAHe;;AAOtBN,OAAQ;AACNC,MAAO,CAAEC,QAAS,CAAEC,SAAU,uBAAZ,CAAX,CADD,CAPc;;AAUtBC,aAAc,EAVQ,CAzBZ;;AAqCZG,sBAAuB;AACrBV,2BADqB;AAErBT,iBAFqB;AAGrBO,MAAO;AACLG,UAAW,IADN;AAELS,sBAAuB,MAFlB,CAHc;;AAOrBP,OAAQ;AACNC,MAAO,CAAEC,QAAS,CAAEC,SAAU,uBAAZ,CAAX,CADD,CAPa;;AAUrBC,aAAc,EAVO,CArCX;;AAiDZI,aAAc;AACZX,2BADY;AAEZT,iBAFY;AAGZO,MAAO;AACLG,UAAW,IADN;AAELU,aAAc,EAFT,CAHK;;AAOZR,OAAQ;AACNC,MAAO,CAAEC,QAAS,CAAEC,SAAU,uBAAZ,CAAX,CADD,CAPI;;AAUZC,aAAc,EAVF,CAjDF;;AA6DZK,MAAO;AACLZ,2BADK;AAELT,iBAFK;AAGLO,MAAO;AACLG,UAAW,IADN;AAELW,MAAO,EAFF,CAHF;;AAOLT,OAAQ;AACNC,MAAO,CAAEC,QAAS,CAAEC,SAAU,uBAAZ,CAAX,CADD,CAPH;;AAULC,aAAc,EAVT,CA7DK;;AAyEZM,OAAQ;AACNb,2BADM;AAENT,iBAFM;AAGNO,MAAO;AACLG,UAAW,IADN;AAELY,OAAQ,EAFH,CAHD;;AAONV,OAAQ;AACNC,MAAO,CAAEC,QAAS,CAAEC,SAAU,uBAAZ,CAAX,CADD,CAPF;;AAUNC,aAAc,EAVR,CAzEI;;AAqFZO,WAAY;AACVd,2BADU;AAEVT,iBAFU;AAGVO,MAAO;AACLG,UAAW,IADN;AAELa,WAAY,IAFP,CAHG;;AAOVX,OAAQ;AACNC,MAAO,CAAEC,QAAS,CAAEC,SAAU,uBAAZ,CAAX,CADD,CAPE;;AAUVC,aAAc,EAVJ,CArFA,CAAd;;;;AAmGA,GAAMQ,SAAU;AACdjB,WADc,CAAhB;;;AAIA;AACE;AACEkB,KAAM,CAAEC,kBAAmB,CAAEC,QAAS,CAAEH,eAAF,CAAX,CAArB,CADR,CADF","file":"Overlay.web.test.js","sourcesContent":["import React from 'react';\r\nimport { Text, TouchableHighlight, View } from 'react-native';\r\nimport foreach from 'lodash.foreach';\r\nimport { shallow } from 'enzyme';\r\nimport toJson from 'enzyme-to-json';\r\nimport parseSamples, {\r\n  assignRef,\r\n  genRefId,\r\n} from 'enzyme-styleguidist-sample-parser';\r\nimport options, {\r\n  snapShot,\r\n  buildJsxForGuideMethod,\r\n  ensureCalled,\r\n  onlyEnsureCalled,\r\n  onlySnapshots,\r\n} from '../../../samples';\r\nimport Overlay from '../Overlay';\r\n\r\nconst children = <Text>here's something</Text>;\r\nconst childrenString = `<Text>here's something</Text>`;\r\n\r\nconst getJsx = propString => {\r\n  const jsx = `initialState = { isVisible: false };\r\nconst View = RN.View;\r\nconst TouchableHighlight = RN.TouchableHighlight;\r\nconst Text = RN.Text;\r\n    \r\n<View>\r\n  <TouchableHighlight\r\n    onPress={() => {\r\n      setState({ isVisible: true });\r\n      setTimeout(() => {\r\n        setState({ isVisible: false });\r\n      }, 4000);\r\n    }}\r\n    style={{ backgroundColor: '#aaa', padding: 10, marginBottom: 15 }}\r\n  >\r\n    <Text>Show Overlay for 4 sec</Text>\r\n  </TouchableHighlight>\r\n  <Overlay ${propString} isVisible={state.isVisible}>\r\n    ${childrenString}\r\n  </Overlay>\r\n</View>\r\n`;\r\n  console.warn(jsx);\r\n  return jsx;\r\n};\r\n\r\n// const props = {\r\n//   containerStyle: {\r\n//     component: Overlay,\r\n//     children,\r\n//     props: {\r\n//       containerStyle: { borderWidth: 5 },\r\n//     },\r\n//     enzyme: {\r\n//       tests: { shallow: { snapshot: snapShot() } },\r\n//     },\r\n//     styleguidist: {\r\n//       getJsxString: getJsx('containerStyle={{ borderWidth: 5 }}'),\r\n//     },\r\n//   },\r\n//   overlayStyle: {\r\n//     component: Overlay,\r\n//     children,\r\n//     props: {\r\n//       overlayStyle: { borderWidth: 5 },\r\n//     },\r\n//     enzyme: {\r\n//       tests: { shallow: { snapshot: snapShot() } },\r\n//     },\r\n//     styleguidist: {\r\n//       getJsxString: getJsx('overlayStyle={{ borderWidth: 5 }}'),\r\n//     },\r\n//   },\r\n// };\r\n\r\nconst props = {\r\n  containerStyle: {\r\n    component: Overlay,\r\n    children,\r\n    props: {\r\n      isVisible: true,\r\n      containerStyle: { borderWidth: 5 },\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  overlayStyle: {\r\n    component: Overlay,\r\n    children,\r\n    props: {\r\n      isVisible: true,\r\n      overlayStyle: { borderWidth: 5 },\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  overlayBackgroundColor: {\r\n    component: Overlay,\r\n    children,\r\n    props: {\r\n      isVisible: true,\r\n      overlayBackgroundColor: '#aaa',\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  windowBackgroundColor: {\r\n    component: Overlay,\r\n    children,\r\n    props: {\r\n      isVisible: true,\r\n      windowBackgroundColor: '#aaa',\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  borderRadius: {\r\n    component: Overlay,\r\n    children,\r\n    props: {\r\n      isVisible: true,\r\n      borderRadius: 20,\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  width: {\r\n    component: Overlay,\r\n    children,\r\n    props: {\r\n      isVisible: true,\r\n      width: 50,\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  height: {\r\n    component: Overlay,\r\n    children,\r\n    props: {\r\n      isVisible: true,\r\n      height: 50,\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  fullScreen: {\r\n    component: Overlay,\r\n    children,\r\n    props: {\r\n      isVisible: true,\r\n      fullScreen: true,\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n};\r\n\r\nconst samples = {\r\n  props,\r\n};\r\n\r\nparseSamples(\r\n  {\r\n    Misc: { sectionComponents: { Overlay: { samples } } },\r\n  },\r\n  options\r\n);\r\n"]}