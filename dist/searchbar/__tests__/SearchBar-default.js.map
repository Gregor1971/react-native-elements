{"version":3,"sources":["../../../src/searchbar/__tests__/SearchBar-default.js"],"names":["describe","it","component","expect","length","toBe","toMatchSnapshot","name","color","style","flex","height","onChangeTextMock","jest","fn","find","simulate","toBeCalled","type"],"mappings":"AAAA,4B;AACA;AACA,4C;AACA,sD;;AAEAA,SAAS,6BAAT,CAAwC,UAAM;AAC5CC,GAAG,8BAAH,CAAmC,UAAM;AACvC,GAAMC,WAAY,oBAAQ,8DAAR,CAAlB;;AAEAC,OAAOD,UAAUE,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,OAAO,2BAAOD,SAAP,CAAP,EAA0BI,eAA1B;AACD,CALD;;AAOAL,GAAG,0BAAH,CAA+B,UAAM;AACnC,GAAMC,WAAY;AAChB;AACE,UAAW;AACTK,KAAM,aADG;AAETC,MAAO,KAFE,CADb;;AAKE,gBALF;AAME,aAAc;AACZC,MAAO,CAAEC,KAAM,CAAR,CADK,CANhB;;AASE,eATF;AAUE,eAAgB,CAAEC,OAAQ,EAAV,CAVlB,EADgB,CAAlB;;;;AAeAR,OAAOD,UAAUE,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,OAAO,2BAAOD,SAAP,CAAP,EAA0BI,eAA1B;AACD,CAlBD;AAmBAL,GAAG,qDAAH,CAA0D,UAAM;AAC9D,GAAMW,kBAAmBC,KAAKC,EAAL,EAAzB;AACA,GAAMZ,WAAY;AAChB,0DAAW,aAAa,IAAxB,CAA6B,cAA7B,CAAuC,aAAcU,gBAArD,EADgB,CAAlB;;AAGAV,UAAUa,IAAV,CAAe,oBAAf,EAAqCC,QAArC,CAA8C,OAA9C;AACAb,OAAOS,gBAAP,EAAyBK,UAAzB;AACD,CAPD;;AASAhB,GAAG,4BAAH,CAAiC,UAAM;AACrC,GAAMC,WAAY;AAChB,0DAAW,sBAAsB,KAAjC,CAAuC,WAAvC,CAA8C,UAA9C,EADgB,CAAlB;;;AAIAC,OAAOD,UAAUE,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,OAAO,2BAAOD,SAAP,CAAP,EAA0BI,eAA1B;AACD,CAPD;;AASAL,GAAG,kCAAH,CAAuC,UAAM;AAC3C,GAAMC,WAAY;AAChB,0DAAW,KAAM,CAAEgB,KAAM,cAAR,CAAwBX,KAAM,OAA9B,CAAjB,EADgB,CAAlB;;;AAIAJ,OAAOD,UAAUE,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,OAAO,2BAAOD,SAAP,CAAP,EAA0BI,eAA1B;AACD,CAPD;AAQD,CArDD","file":"SearchBar-default.js","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport toJson from 'enzyme-to-json';\nimport SearchBar from '../SearchBar-default';\n\ndescribe('Default SearchBar component', () => {\n  it('should render without issues', () => {\n    const component = shallow(<SearchBar />);\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render with icons', () => {\n    const component = shallow(\n      <SearchBar\n        clearIcon={{\n          name: '3d-rotation',\n          color: 'red',\n        }}\n        showLoading\n        loadingProps={{\n          style: { flex: 1 },\n        }}\n        lightTheme\n        containerStyle={{ height: 70 }}\n      />\n    );\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n  it('should call onTextChange when close icon is touched', () => {\n    const onChangeTextMock = jest.fn();\n    const component = shallow(\n      <SearchBar textInputRef=\"ti\" clearIcon onChangeText={onChangeTextMock} />\n    );\n    component.find('Icon[name=\"close\"]').simulate('press');\n    expect(onChangeTextMock).toBeCalled();\n  });\n\n  it('should render without icon', () => {\n    const component = shallow(\n      <SearchBar underlineColorAndroid=\"red\" noIcon round />\n    );\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render with a custom icon', () => {\n    const component = shallow(\n      <SearchBar icon={{ type: 'font-awesome', name: 'glass' }} />\n    );\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n});\n"]}