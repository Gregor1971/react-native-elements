{"version":3,"sources":["../../../src/searchbar/__tests__/SearchBar-default.web.test.js"],"names":["props","component","enzyme","tests","shallow","snapshot","styleguidist","containerStyle","borderWidth","borderColor","inputStyle","icon","name","color","noIcon","lightTheme","round","underlineColorAndroid","loadingIcon","showLoadingIcon","placeholder","placeholderTextColor","onChangeText","console","log","text","onClearText","defaultValue","clearIcon","methods","focus","script","cd","buildJsx","blur","clearText","samples","Input","sectionComponents","SearchBar","describe","it","expect","length","toBe","toMatchSnapshot","style","flex","height","onChangeTextMock","jest","fn","find","simulate","toBeCalled"],"mappings":"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","file":"SearchBar-default.web.test.js","sourcesContent":["import React from 'react';\r\nimport { Text, TouchableHighlight, View } from 'react-native';\r\nimport { shallow } from 'enzyme';\r\nimport toJson from 'enzyme-to-json';\r\nimport parseSamples, {\r\n  assignRef,\r\n  genRefId,\r\n} from 'enzyme-styleguidist-sample-parser';\r\nimport options, {\r\n  snapShot,\r\n  buildJsxForGuideMethod,\r\n  ensureCalled,\r\n  onlyEnsureCalled,\r\n  onlySnapshots,\r\n} from '../../../samples';\r\nimport SearchBar from '../SearchBar-default';\r\n\r\nconst props = {\r\n  'no props': {\r\n    component: SearchBar,\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  containerStyle: {\r\n    component: SearchBar,\r\n    props: {\r\n      containerStyle: { borderWidth: 5, borderColor: '#071' },\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  inputStyle: {\r\n    component: SearchBar,\r\n    props: {\r\n      inputStyle: { borderWidth: 5, borderColor: '#071' },\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  icon: {\r\n    component: SearchBar,\r\n    props: {\r\n      icon: { name: 'pets', color: '#071' },\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  noIcon: {\r\n    component: SearchBar,\r\n    props: {\r\n      noIcon: true,\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  lightTheme: {\r\n    component: SearchBar,\r\n    props: {\r\n      lightTheme: true,\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  round: {\r\n    component: SearchBar,\r\n    props: {\r\n      round: true,\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  underlineColorAndroid: {\r\n    component: SearchBar,\r\n    props: {\r\n      underlineColorAndroid: '#071',\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  loadingIcon: {\r\n    component: SearchBar,\r\n    props: {\r\n      showLoadingIcon: true,\r\n      loadingIcon: { color: '#071' },\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  placeholder: {\r\n    component: SearchBar,\r\n    props: {\r\n      placeholder: 'placeholder',\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  placeholderTextColor: {\r\n    component: SearchBar,\r\n    props: {\r\n      placeholder: 'placeholder',\r\n      placeholderTextColor: '#071',\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  onChangeText: {\r\n    component: SearchBar,\r\n    props: {\r\n      onChangeText: text => {\r\n        console.log(text);\r\n      },\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  onClearText: {\r\n    component: SearchBar,\r\n    props: {\r\n      defaultValue: 'text to clear',\r\n      clearIcon: { name: 'clear' },\r\n      onClearText: () => {\r\n        console.log('onClearText');\r\n      },\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  clearIcon: {\r\n    component: SearchBar,\r\n    props: {\r\n      showLoadingIcon: true,\r\n      clearIcon: { name: 'clear', color: '#071' },\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n};\r\n\r\nconst methods = {\r\n  focus: {\r\n    component: SearchBar,\r\n    props: { defaultValue: 'cursor will appear' },\r\n    styleguidist: {\r\n      script: `const View = RN.View;\\nconst TouchableHighlight = RN.TouchableHighlight;\\nconst Text = RN.Text;\\n`,\r\n      cd: 1000,\r\n      buildJsx: buildJsxForGuideMethod,\r\n    },\r\n    enzyme: {\r\n      tests: {\r\n        shallow: {\r\n          'ensure called': ensureCalled(),\r\n        },\r\n      },\r\n    },\r\n  },\r\n  blur: {\r\n    component: SearchBar,\r\n    props: { defaultValue: 'place cursor here and watch it be removed' },\r\n    styleguidist: {\r\n      script: `const View = RN.View;\\nconst TouchableHighlight = RN.TouchableHighlight;\\nconst Text = RN.Text;\\n`,\r\n      cd: 3000,\r\n      buildJsx: buildJsxForGuideMethod,\r\n    },\r\n    enzyme: {\r\n      tests: {\r\n        shallow: {\r\n          'ensure called': ensureCalled(),\r\n        },\r\n      },\r\n    },\r\n  },\r\n  clearText: {\r\n    component: SearchBar,\r\n    props: { defaultValue: 'text to clear' },\r\n    styleguidist: {\r\n      script: `const View = RN.View;\\nconst TouchableHighlight = RN.TouchableHighlight;\\nconst Text = RN.Text;\\n`,\r\n      buildJsx: buildJsxForGuideMethod,\r\n    },\r\n    enzyme: {\r\n      tests: {\r\n        shallow: {\r\n          'ensure called': ensureCalled(),\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\nconst samples = {\r\n  props,\r\n  methods,\r\n};\r\n\r\nparseSamples(\r\n  {\r\n    Input: { sectionComponents: { SearchBar: { samples } } },\r\n  },\r\n  options\r\n);\r\n\r\ndescribe('Search component', () => {\r\n  it('should render without issues', () => {\r\n    const component = shallow(<SearchBar />);\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n\r\n  it('should render with icons', () => {\r\n    const component = shallow(\r\n      <SearchBar\r\n        clearIcon={{\r\n          name: '3d-rotation',\r\n          color: 'red',\r\n        }}\r\n        showLoadingIcon\r\n        loadingIcon={{\r\n          style: { flex: 1 },\r\n        }}\r\n        lightTheme\r\n        containerStyle={{ height: 70 }}\r\n      />\r\n    );\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n  it('should call onTextChange when close icon is touched', () => {\r\n    const onChangeTextMock = jest.fn();\r\n    const component = shallow(\r\n      <SearchBar textInputRef=\"ti\" clearIcon onChangeText={onChangeTextMock} />\r\n    );\r\n    component.find('Icon[name=\"close\"]').simulate('press');\r\n    expect(onChangeTextMock).toBeCalled();\r\n  });\r\n\r\n  it('should render without icon', () => {\r\n    const component = shallow(\r\n      <SearchBar underlineColorAndroid=\"red\" noIcon round />\r\n    );\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n});\r\n"]}