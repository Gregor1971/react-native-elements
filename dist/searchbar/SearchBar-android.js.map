{"version":3,"sources":["../../src/searchbar/SearchBar-android.js"],"names":["SCREEN_WIDTH","get","width","ANDROID_GRAY","SearchBar","props","focus","input","blur","clear","onChangeText","onClearText","cancel","onCancel","onFocus","setState","hasFocus","onBlur","text","isEmpty","state","clearIcon","containerStyle","leftIcon","leftIconContainerStyle","rightIconContainerStyle","inputStyle","noIcon","showLoading","loadingProps","attributes","loadingStyle","style","otherLoadingProps","searchIcon","styles","container","inputContainer","undefined","flexDirection","marginRight","propTypes","bool","object","func","defaultProps","create","backgroundColor","paddingTop","paddingBottom","flex","marginLeft","borderBottomWidth"],"mappings":"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","file":"SearchBar-android.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n  Dimensions,\n  StyleSheet,\n  View,\n  ActivityIndicator,\n  Text,\n} from 'react-native';\nimport MaterialIcon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nimport ViewPropTypes from '../config/ViewPropTypes';\nimport Input from '../input/Input';\n\nconst SCREEN_WIDTH = Dimensions.get('window').width;\nconst ANDROID_GRAY = 'rgba(0, 0, 0, 0.54)';\n\nclass SearchBar extends Component {\n  focus = () => {\n    this.input.focus();\n  };\n\n  blur = () => {\n    this.input.blur();\n  };\n\n  clear = () => {\n    this.input.clear();\n    this.onChangeText('');\n    this.props.onClearText();\n  };\n\n  cancel = () => {\n    this.blur();\n    this.props.onCancel();\n  };\n\n  onFocus = () => {\n    this.props.onFocus();\n    this.setState({ hasFocus: true });\n  };\n\n  onBlur = () => {\n    this.props.onBlur();\n    this.setState({ hasFocus: false });\n  };\n\n  onChangeText = text => {\n    this.props.onChangeText(text);\n    this.setState({ isEmpty: text === '' });\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasFocus: false,\n      isEmpty: true,\n    };\n  }\n\n  render() {\n    const {\n      clearIcon,\n      containerStyle,\n      leftIcon,\n      leftIconContainerStyle,\n      rightIconContainerStyle,\n      inputStyle,\n      noIcon,\n      showLoading,\n      loadingProps,\n      ...attributes\n    } = this.props;\n    const { hasFocus, isEmpty } = this.state;\n    const { style: loadingStyle, ...otherLoadingProps } = loadingProps;\n    const searchIcon = (\n      <MaterialIcon\n        size={25}\n        color={ANDROID_GRAY}\n        name={hasFocus ? 'arrow-left' : 'magnify'}\n        onPress={hasFocus ? this.cancel : null}\n      />\n    );\n    return (\n      <View style={styles.container}>\n        <Input\n          {...attributes}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onChangeText={this.onChangeText}\n          ref={input => (this.input = input)}\n          inputStyle={[styles.input, inputStyle]}\n          containerStyle={[styles.inputContainer, containerStyle]}\n          leftIcon={noIcon ? undefined : leftIcon ? leftIcon : searchIcon}\n          leftIconContainerStyle={[\n            styles.leftIconContainerStyle,\n            leftIconContainerStyle,\n          ]}\n          rightIcon={\n            <View style={{ flexDirection: 'row' }}>\n              {showLoading && (\n                <ActivityIndicator\n                  style={[\n                    clearIcon && !isEmpty && { marginRight: 10 },\n                    loadingStyle,\n                  ]}\n                  {...otherLoadingProps}\n                />\n              )}\n              {clearIcon &&\n                !isEmpty && (\n                  <MaterialIcon\n                    name={'close'}\n                    size={25}\n                    color={ANDROID_GRAY}\n                    onPress={() => this.clear()}\n                  />\n                )}\n            </View>\n          }\n          rightIconContainerStyle={[\n            styles.rightIconContainerStyle,\n            rightIconContainerStyle,\n          ]}\n        />\n      </View>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  clearIcon: PropTypes.bool,\n  loadingProps: PropTypes.object,\n  noIcon: PropTypes.bool,\n  showLoading: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  leftIcon: PropTypes.object,\n  leftIconContainerStyle: ViewPropTypes.style,\n  rightIconContainerStyle: ViewPropTypes.style,\n  inputStyle: Text.propTypes.style,\n  onClearText: PropTypes.func,\n  onCancel: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func,\n};\n\nSearchBar.defaultProps = {\n  clearIcon: true,\n  loadingProps: {},\n  noIcon: false,\n  showLoading: false,\n  onClearText: () => null,\n  onCancel: () => null,\n  onFocus: () => null,\n  onBlur: () => null,\n  onChangeText: () => null,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    width: SCREEN_WIDTH,\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  input: {\n    flex: 1,\n    marginLeft: 24,\n    marginRight: 8,\n  },\n  inputContainer: {\n    borderBottomWidth: 0,\n    width: SCREEN_WIDTH,\n  },\n  rightIconContainerStyle: {\n    marginRight: 8,\n  },\n  leftIconContainerStyle: {\n    marginLeft: 8,\n  },\n});\n\nexport default SearchBar;\n"]}