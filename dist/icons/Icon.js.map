{"version":3,"sources":["../../src/icons/Icon.js"],"names":["Icon","type","props","name","size","color","iconStyle","component","underlayColor","reverse","raised","containerStyle","reverseColor","onPress","onLongPress","attributes","touchableProps","Component","styles","button","borderRadius","height","width","backgroundColor","alignItems","justifyContent","propTypes","string","number","func","bool","style","defaultProps","create","margin","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","two","web"],"mappings":"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","file":"Icon.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Platform,\n  TouchableHighlight,\n  View,\n  StyleSheet,\n  Text as NativeText,\n} from 'react-native';\nimport getIconType from '../helpers/getIconType';\nimport elevation from '../config/elevation';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst Icon = props => {\n  const {\n    type,\n    name,\n    size,\n    color,\n    iconStyle,\n    component,\n    underlayColor,\n    reverse,\n    raised,\n    containerStyle,\n    reverseColor,\n    onPress,\n    onLongPress,\n    ...attributes\n  } = props;\n\n  let touchableProps = {};\n  let Component = View;\n  if (onPress || onLongPress) {\n    touchableProps = {\n      onPress,\n      onLongPress,\n      underlayColor: reverse ? color : underlayColor || color,\n    };\n    Component = TouchableHighlight;\n  }\n  if (component) {\n    Component = component;\n  }\n  let Icon;\n  if (!type) {\n    Icon = getIconType('material');\n  } else {\n    Icon = getIconType(type);\n  }\n  return (\n    <Component\n      {...attributes}\n      style={[\n        (reverse || raised) && styles.button,\n        (reverse || raised) && {\n          borderRadius: size + 4,\n          height: size * 2 + 4,\n          width: size * 2 + 4,\n        },\n        raised && styles.raised,\n        {\n          backgroundColor: reverse ? color : raised ? 'white' : 'transparent',\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n        containerStyle && containerStyle,\n      ]}\n      {...touchableProps}\n    >\n      <Icon\n        style={[{ backgroundColor: 'transparent' }, iconStyle && iconStyle]}\n        size={size}\n        name={name}\n        color={reverse ? reverseColor : color}\n      />\n    </Component>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  component: PropTypes.func,\n  underlayColor: PropTypes.string,\n  reverse: PropTypes.bool,\n  raised: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  iconStyle: NativeText.propTypes.style,\n  onPress: PropTypes.func,\n  reverseColor: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  underlayColor: 'white',\n  reverse: false,\n  raised: false,\n  size: 24,\n  color: 'black',\n  reverseColor: 'white',\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    margin: 7,\n  },\n  raised: {\n    ...Platform.select({\n      ios: {\n        shadowColor: 'rgba(0,0,0, .4)',\n        shadowOffset: { height: 1, width: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 1,\n      },\n      android: elevation.android.two,\n      web: elevation.web.two,\n    }),\n  },\n});\n\nexport default Icon;\n"]}