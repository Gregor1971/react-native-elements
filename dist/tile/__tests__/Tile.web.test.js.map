{"version":3,"sources":["../../../src/tile/__tests__/Tile.web.test.js"],"names":["props","imageSrc","component","width","height","enzyme","tests","styleguidist","icon","name","color","shallow","snapshot","iconContainerStyle","borderWidth","borderColor","title","titleStyle","titleNumberOfLines","caption","featured","captionStyle","containerStyle","onPress","console","log","activeOpacity","contentContainerStyle","samples","Misc","sectionComponents","Tile","describe","it","url","expect","length","toBe","toMatchSnapshot","type","backgroundColor"],"mappings":"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","file":"Tile.web.test.js","sourcesContent":["import React from 'react';\r\nimport { Text, TouchableHighlight, View } from 'react-native';\r\nimport parseSamples, {\r\n  assignRef,\r\n  genRefId,\r\n} from 'enzyme-styleguidist-sample-parser';\r\nimport { shallow } from 'enzyme';\r\nimport toJson from 'enzyme-to-json';\r\nimport options, {\r\n  snapShot,\r\n  buildJsxForGuideMethod,\r\n  ensureCalled,\r\n  onlyEnsureCalled,\r\n  onlySnapshots,\r\n} from '../../../samples';\r\nimport Tile from '../Tile';\r\n\r\nconst props = {\r\n  imageSrc: {\r\n    component: Tile,\r\n    props: {\r\n      imageSrc: 'hero.jpg',\r\n      width: 400,\r\n      height: 400,\r\n    },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  icon: {\r\n    component: Tile,\r\n    props: {\r\n      imageSrc: 'hero.jpg',\r\n      icon: {\r\n        name: 'pets',\r\n        color: 'white',\r\n      },\r\n      width: 400,\r\n      height: 400,\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  iconContainerStyle: {\r\n    component: Tile,\r\n    props: {\r\n      imageSrc: 'hero.jpg',\r\n      iconContainerStyle: { borderWidth: 5, borderColor: 'white' },\r\n      icon: {\r\n        name: 'pets',\r\n        color: 'white',\r\n      },\r\n      width: 400,\r\n      height: 400,\r\n    },\r\n    enzyme: {\r\n      tests: { shallow: { snapshot: snapShot() } },\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  title: {\r\n    component: Tile,\r\n    props: {\r\n      imageSrc: 'hero.jpg',\r\n      title: 'Title',\r\n      width: 400,\r\n      height: 400,\r\n    },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  titleStyle: {\r\n    component: Tile,\r\n    props: {\r\n      imageSrc: 'hero.jpg',\r\n      title: 'Title',\r\n      titleStyle: {\r\n        color: '#071',\r\n      },\r\n      width: 400,\r\n      height: 400,\r\n    },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  titleNumberOfLines: {\r\n    component: Tile,\r\n    props: {\r\n      imageSrc: 'hero.jpg',\r\n      title: 'Title line1\\\\nline2\\\\nline3',\r\n      titleNumberOfLines: 3,\r\n      width: 400,\r\n      height: 400,\r\n    },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  caption: {\r\n    component: Tile,\r\n    props: {\r\n      imageSrc: 'hero.jpg',\r\n      title: 'Title',\r\n      caption: 'Caption',\r\n      featured: true,\r\n      width: 400,\r\n      height: 400,\r\n    },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  captionStyle: {\r\n    component: Tile,\r\n    props: {\r\n      imageSrc: 'hero.jpg',\r\n      title: 'Title',\r\n      featured: true,\r\n      caption: 'Caption',\r\n      captionStyle: {\r\n        color: '#071',\r\n      },\r\n      width: 400,\r\n      height: 400,\r\n    },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  containerStyle: {\r\n    component: Tile,\r\n    props: {\r\n      imageSrc: 'hero.jpg',\r\n      containerStyle: {\r\n        borderWidth: 5,\r\n      },\r\n      width: 400,\r\n      height: 400,\r\n    },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  onPress: {\r\n    component: Tile,\r\n    props: {\r\n      imageSrc: 'hero.jpg',\r\n      onPress: () => {\r\n        console.log('pressed');\r\n      },\r\n      width: 400,\r\n      height: 400,\r\n    },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  activeOpacity: {\r\n    component: Tile,\r\n    props: {\r\n      imageSrc: 'hero.jpg',\r\n      activeOpacity: 0.99,\r\n      onPress: () => {\r\n        console.log('pressed');\r\n      },\r\n      width: 400,\r\n      height: 400,\r\n    },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  contentContainerStyle: {\r\n    component: Tile,\r\n    props: {\r\n      imageSrc: 'hero.jpg',\r\n      contentContainerStyle: {\r\n        borderWidth: 5,\r\n      },\r\n      width: 400,\r\n      height: 400,\r\n    },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n};\r\n\r\nconst samples = {\r\n  props,\r\n};\r\n\r\nparseSamples(\r\n  {\r\n    Misc: { sectionComponents: { Tile: { samples } } },\r\n  },\r\n  options\r\n);\r\n\r\ndescribe('Tile component', () => {\r\n  it('should render without issues', () => {\r\n    const component = shallow(<Tile imageSrc={{ url: 'http://google.com' }} />);\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n\r\n  it('should render featured tile', () => {\r\n    const component = shallow(\r\n      <Tile\r\n        imageSrc={{ url: 'http://google.com' }}\r\n        title=\"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores dolore exercitationem\"\r\n        featured\r\n        caption=\"Some Caption Text\"\r\n      />\r\n    );\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n\r\n  it('should render featured tile with icon', () => {\r\n    const component = shallow(\r\n      <Tile\r\n        imageSrc={{ url: 'http://google.com' }}\r\n        icon={{ name: 'play-circle', type: 'font-awesome' }}\r\n        featured\r\n      />\r\n    );\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n\r\n  it('should render tile with icon', () => {\r\n    const component = shallow(\r\n      <Tile\r\n        imageSrc={{ url: 'http://google.com' }}\r\n        title=\"Lorem ipsum dolor sit amet, consectetur\"\r\n        icon={{ name: 'play-circle', type: 'font-awesome' }}\r\n        contentContainerStyle={{ height: 70 }}\r\n        imageContainerStyle={{ height: 70 }}\r\n        iconContainerStyle={{ height: 70 }}\r\n        containerStyle={{ height: 70 }}\r\n        titleStyle={{ backgroundColor: 'yellow' }}\r\n      />\r\n    );\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n});\r\n"]}