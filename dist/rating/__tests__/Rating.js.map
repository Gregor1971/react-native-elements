{"version":3,"sources":["../../../src/rating/__tests__/Rating.js"],"names":["describe","it","component","expect","length","toBe","toMatchSnapshot","uri"],"mappings":"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","file":"Rating.js","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport toJson from 'enzyme-to-json';\nimport Rating from '../Rating';\n\ndescribe('Rating Component', () => {\n  it('should render without issues', () => {\n    const component = shallow(<Rating />);\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render rating label', () => {\n    const component = shallow(<Rating showRating />);\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render custom images', () => {\n    const component = shallow(\n      <Rating\n        type=\"custom\"\n        ratingImage={{\n          uri: 'https://image.freepik.com/free-icon/smiley_318-121680.jpg',\n        }}\n      />\n    );\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render custom color', () => {\n    const component = shallow(\n      <Rating\n        type=\"custom\"\n        ratingImage={{\n          uri: 'https://image.freepik.com/free-icon/smiley_318-121680.jpg',\n        }}\n        ratingColor=\"green\"\n      />\n    );\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render custom background color', () => {\n    const component = shallow(\n      <Rating\n        type=\"custom\"\n        ratingImage={{\n          uri: 'https://image.freepik.com/free-icon/smiley_318-121680.jpg',\n        }}\n        ratingColor=\"green\"\n        ratingBackgroundColor=\"darkgreen\"\n      />\n    );\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render 10 images', () => {\n    const component = shallow(<Rating ratingCount={10} />);\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render images with the size of 30', () => {\n    const component = shallow(<Rating imageSize={30} />);\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render in readonly mode', () => {\n    const component = shallow(<Rating readonly />);\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render with an initial value of 3.3', () => {\n    const component = shallow(<Rating showRating startingValue={3.3} />);\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render value with 2 decimal places', () => {\n    const component = shallow(<Rating showRating fractions={2} />);\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n});\n"]}