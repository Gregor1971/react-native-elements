{"version":3,"sources":["../../src/text/Text.js"],"names":["styles","create","text","select","android","regular","bold","web","fontWeight","TextElement","style","props","children","h1","h2","h3","h4","fontFamily","rest","fontSize","propTypes","any","bool","string"],"mappings":"yRAAA,qC;AACA,4B;AACA;AACA,sC;AACA,uD;;AAEA,GAAMA,QAAS,wBAAWC,MAAX,CAAkB;AAC/BC;AACK,sBAASC,MAAT,CAAgB;AACjBC;AACK,gBAAMA,OAAN,CAAcC,OADnB,CADiB,CAAhB,CADL,CAD+B;;;;AAQ/BC;AACK,sBAASH,MAAT,CAAgB;AACjBC;AACK,gBAAMA,OAAN,CAAcE,IADnB,CADiB;;AAIjBC,IAAK;AACHC,WAAY,MADT,CAJY,CAAhB,CADL,CAR+B,CAAlB,CAAf;;;;;;AAoBA,GAAMC,aAAc,QAAdA,YAAc,OAAS;AACnBC,KADmB,CACsCC,KADtC,CACnBD,KADmB,CACZE,QADY,CACsCD,KADtC,CACZC,QADY,CACFC,EADE,CACsCF,KADtC,CACFE,EADE,CACEC,EADF,CACsCH,KADtC,CACEG,EADF,CACMC,EADN,CACsCJ,KADtC,CACMI,EADN,CACUC,EADV,CACsCL,KADtC,CACUK,EADV,CACcC,UADd,CACsCN,KADtC,CACcM,UADd,CAC6BC,IAD7B,0BACsCP,KADtC;;AAG3B;AACE;AACE,MAAO;AACLX,OAAOE,IADF;AAELW,IAAM,CAAEM,SAAU,4BAAU,EAAV,CAAZ,CAFD;AAGLL,IAAM,CAAEK,SAAU,4BAAU,EAAV,CAAZ,CAHD;AAILJ,IAAM,CAAEI,SAAU,4BAAU,EAAV,CAAZ,CAJD;AAKLH,IAAM,CAAEG,SAAU,4BAAU,EAAV,CAAZ,CALD;AAMLN,IAAMb,OAAOM,IANR;AAOLQ,IAAMd,OAAOM,IAPR;AAQLS,IAAMf,OAAOM,IARR;AASLU,IAAMhB,OAAOM,IATR;AAULW,YAAc,CAAEA,qBAAF,CAVT;AAWLP,OAASA,KAXJ,CADT;;AAcMQ,IAdN;;AAgBGN,QAhBH,CADF;;;AAoBD,CAvBD;;AAyBAH,YAAYW,SAAZ,CAAwB;AACtBV,MAAO,oBAAUW,GADK;AAEtBR,GAAI,oBAAUS,IAFQ;AAGtBR,GAAI,oBAAUQ,IAHQ;AAItBP,GAAI,oBAAUO,IAJQ;AAKtBN,GAAI,oBAAUM,IALQ;AAMtBL,WAAY,oBAAUM,MANA;AAOtBX,SAAU,oBAAUS,GAPE,CAAxB,C;;;AAUeZ,W","file":"Text.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text, StyleSheet, Platform } from 'react-native';\nimport fonts from '../config/fonts';\nimport normalize from '../helpers/normalizeText';\n\nconst styles = StyleSheet.create({\n  text: {\n    ...Platform.select({\n      android: {\n        ...fonts.android.regular,\n      },\n    }),\n  },\n  bold: {\n    ...Platform.select({\n      android: {\n        ...fonts.android.bold,\n      },\n      web: {\n        fontWeight: 'bold',\n      },\n    }),\n  },\n});\n\nconst TextElement = props => {\n  const { style, children, h1, h2, h3, h4, fontFamily, ...rest } = props;\n\n  return (\n    <Text\n      style={[\n        styles.text,\n        h1 && { fontSize: normalize(40) },\n        h2 && { fontSize: normalize(34) },\n        h3 && { fontSize: normalize(28) },\n        h4 && { fontSize: normalize(22) },\n        h1 && styles.bold,\n        h2 && styles.bold,\n        h3 && styles.bold,\n        h4 && styles.bold,\n        fontFamily && { fontFamily },\n        style && style,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Text>\n  );\n};\n\nTextElement.propTypes = {\n  style: PropTypes.any,\n  h1: PropTypes.bool,\n  h2: PropTypes.bool,\n  h3: PropTypes.bool,\n  h4: PropTypes.bool,\n  fontFamily: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport default TextElement;\n"]}