{"version":3,"sources":["../../../src/text/__tests__/Text.js"],"names":["describe","it","component","expect","length","toBe","toMatchSnapshot","styles","props","style","fontSizeStyle","i","hasOwnProperty","fontSize","children","color"],"mappings":"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","file":"Text.js","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport toJson from 'enzyme-to-json';\nimport Text from '../Text';\n\ndescribe('Text Component', () => {\n  it('should render without issues', () => {\n    const component = shallow(<Text />);\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should have font size of 50 when h1', () => {\n    const component = shallow(<Text h1 />);\n\n    const styles = component.props().style;\n    let fontSizeStyle;\n    for (let i = 0; i < styles.length; i++) {\n      if (styles[i] && styles[i].hasOwnProperty('fontSize')) {\n        fontSizeStyle = styles[i].fontSize;\n      }\n    }\n\n    expect(fontSizeStyle).toBe(50);\n  });\n\n  it('should have font size of 42.5 when h2', () => {\n    const component = shallow(<Text h2 />);\n\n    const styles = component.props().style;\n    let fontSizeStyle;\n    for (let i = 0; i < styles.length; i++) {\n      if (styles[i] && styles[i].hasOwnProperty('fontSize')) {\n        fontSizeStyle = styles[i].fontSize;\n      }\n    }\n\n    expect(fontSizeStyle).toBe(42.5);\n  });\n\n  it('should have font size of 35 when h3', () => {\n    const component = shallow(<Text h3 />);\n\n    const styles = component.props().style;\n    let fontSizeStyle;\n    for (let i = 0; i < styles.length; i++) {\n      if (styles[i] && styles[i].hasOwnProperty('fontSize')) {\n        fontSizeStyle = styles[i].fontSize;\n      }\n    }\n\n    expect(fontSizeStyle).toBe(35);\n  });\n\n  it('should have font size of 27.5 when h4', () => {\n    const component = shallow(<Text h4 />);\n\n    const styles = component.props().style;\n    let fontSizeStyle;\n    for (let i = 0; i < styles.length; i++) {\n      if (styles[i] && styles[i].hasOwnProperty('fontSize')) {\n        fontSizeStyle = styles[i].fontSize;\n      }\n    }\n\n    expect(fontSizeStyle).toBe(27.5);\n  });\n\n  it('should have text as children', () => {\n    const component = shallow(<Text>Children Text</Text>);\n\n    expect(component.props().children).toBe('Children Text');\n  });\n\n  it('should render fontFamily and style', () => {\n    const component = shallow(\n      <Text fontFamily=\"comic-sans\" style={{ color: 'red' }}>\n        Children Text\n      </Text>\n    );\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n});\n"]}