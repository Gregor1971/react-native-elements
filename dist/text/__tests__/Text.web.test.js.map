{"version":3,"sources":["../../../src/text/__tests__/Text.web.test.js"],"names":["props","component","children","enzyme","tests","styleguidist","h1","h2","h3","h4","fontFamily","style","color","samples","Misc","sectionComponents","Text","describe","it","expect","length","toBe","toMatchSnapshot","styles","fontSizeStyle","i","hasOwnProperty","fontSize"],"mappings":"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","file":"Text.web.test.js","sourcesContent":["import React from 'react';\r\nimport { TouchableHighlight, View } from 'react-native';\r\nimport { shallow } from 'enzyme';\r\nimport toJson from 'enzyme-to-json';\r\nimport parseSamples, {\r\n  assignRef,\r\n  genRefId,\r\n} from 'enzyme-styleguidist-sample-parser';\r\nimport options, {\r\n  snapShot,\r\n  buildJsxForGuideMethod,\r\n  ensureCalled,\r\n  onlyEnsureCalled,\r\n  onlySnapshots,\r\n} from '../../../samples';\r\nimport Text from '../Text';\r\n\r\nconst props = {\r\n  'no props': {\r\n    component: Text,\r\n    children: 'Text',\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  h1: {\r\n    component: Text,\r\n    props: { h1: true },\r\n    children: 'Text',\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  h2: {\r\n    component: Text,\r\n    props: { h2: true },\r\n    children: 'Text',\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  h3: {\r\n    component: Text,\r\n    props: { h3: true },\r\n    children: 'Text',\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  h4: {\r\n    component: Text,\r\n    props: { h4: true },\r\n    children: 'Text',\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  fontFamily: {\r\n    component: Text,\r\n    props: { fontFamily: 'Courier New' },\r\n    children: 'Text',\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  style: {\r\n    component: Text,\r\n    props: { style: { color: '#071' } },\r\n    children: 'Text',\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n};\r\n\r\nconst samples = {\r\n  props,\r\n};\r\n\r\nparseSamples(\r\n  {\r\n    Misc: { sectionComponents: { Text: { samples } } },\r\n  },\r\n  options\r\n);\r\n\r\ndescribe('Text Component', () => {\r\n  it('should render without issues', () => {\r\n    const component = shallow(<Text />);\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n\r\n  it('should have font size of 40 when h1', () => {\r\n    const component = shallow(<Text h1 />);\r\n\r\n    const styles = component.props().style;\r\n    let fontSizeStyle;\r\n    for (let i = 0; i < styles.length; i++) {\r\n      if (styles[i] && styles[i].hasOwnProperty('fontSize')) {\r\n        fontSizeStyle = styles[i].fontSize;\r\n      }\r\n    }\r\n\r\n    expect(fontSizeStyle).toBe(40);\r\n  });\r\n\r\n  it('should have font size of 34 when h2', () => {\r\n    const component = shallow(<Text h2 />);\r\n\r\n    const styles = component.props().style;\r\n    let fontSizeStyle;\r\n    for (let i = 0; i < styles.length; i++) {\r\n      if (styles[i] && styles[i].hasOwnProperty('fontSize')) {\r\n        fontSizeStyle = styles[i].fontSize;\r\n      }\r\n    }\r\n\r\n    expect(fontSizeStyle).toBe(34);\r\n  });\r\n\r\n  it('should have font size of 28 when h3', () => {\r\n    const component = shallow(<Text h3 />);\r\n\r\n    const styles = component.props().style;\r\n    let fontSizeStyle;\r\n    for (let i = 0; i < styles.length; i++) {\r\n      if (styles[i] && styles[i].hasOwnProperty('fontSize')) {\r\n        fontSizeStyle = styles[i].fontSize;\r\n      }\r\n    }\r\n\r\n    expect(fontSizeStyle).toBe(28);\r\n  });\r\n\r\n  it('should have font size of 22 when h4', () => {\r\n    const component = shallow(<Text h4 />);\r\n\r\n    const styles = component.props().style;\r\n    let fontSizeStyle;\r\n    for (let i = 0; i < styles.length; i++) {\r\n      if (styles[i] && styles[i].hasOwnProperty('fontSize')) {\r\n        fontSizeStyle = styles[i].fontSize;\r\n      }\r\n    }\r\n\r\n    expect(fontSizeStyle).toBe(22);\r\n  });\r\n\r\n  it('should have text as children', () => {\r\n    const component = shallow(<Text>Children Text</Text>);\r\n\r\n    expect(component.props().children).toBe('Children Text');\r\n  });\r\n\r\n  it('should render fontFamily and style', () => {\r\n    const component = shallow(\r\n      <Text fontFamily=\"comic-sans\" style={{ color: 'red' }}>\r\n        Children Text\r\n      </Text>\r\n    );\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n});\r\n"]}