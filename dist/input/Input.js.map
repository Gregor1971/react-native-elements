{"version":3,"sources":["../../src/input/Input.js"],"names":["SCREEN_WIDTH","get","width","Input","shake","bind","shakeAnimationValue","Value","props","input","focus","blur","clear","setValue","timing","duration","toValue","ease","bounce","start","containerStyle","leftIcon","leftIconContainerStyle","rightIcon","rightIconContainerStyle","inputStyle","displayError","errorStyle","errorMessage","attributes","translateX","interpolate","inputRange","outputRange","styles","container","height","transform","iconContainer","marginLeft","error","propTypes","style","object","any","bool","string","create","flexDirection","borderBottomWidth","borderColor","alignItems","justifyContent","alignSelf","color","fontSize","margin"],"mappings":"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","file":"Input.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Dimensions,\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst SCREEN_WIDTH = Dimensions.get('window').width;\n\nclass Input extends Component {\n  componentWillMount() {\n    this.shake = this.shake.bind(this);\n    this.shakeAnimationValue = new Animated.Value(0);\n    this.props.shake && this.shake();\n  }\n\n  focus() {\n    this.input.focus();\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  clear() {\n    this.input.clear();\n  }\n\n  shake() {\n    const { shakeAnimationValue } = this;\n\n    shakeAnimationValue.setValue(0);\n    // Animation duration based on Material Design\n    // https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n    Animated.timing(shakeAnimationValue, {\n      duration: 375,\n      toValue: 3,\n      ease: Easing.bounce,\n    }).start();\n  }\n\n  render() {\n    const {\n      containerStyle,\n      leftIcon,\n      leftIconContainerStyle,\n      rightIcon,\n      rightIconContainerStyle,\n      inputStyle,\n      displayError,\n      errorStyle,\n      errorMessage,\n      ...attributes\n    } = this.props;\n    const translateX = this.shakeAnimationValue.interpolate({\n      inputRange: [0, 0.5, 1, 1.5, 2, 2.5, 3],\n      outputRange: [0, -15, 0, 15, 0, -15, 0],\n    });\n\n    return (\n      <View>\n        <Animated.View\n          style={[\n            styles.container,\n            { width: SCREEN_WIDTH - 100, height: 40 },\n            containerStyle,\n            { transform: [{ translateX }] },\n          ]}\n        >\n          {leftIcon && (\n            <View\n              style={[\n                styles.iconContainer,\n                { marginLeft: 15 },\n                leftIconContainerStyle,\n              ]}\n            >\n              {leftIcon}\n            </View>\n          )}\n          <TextInput\n            ref={input => (this.input = input)}\n            underlineColorAndroid=\"transparent\"\n            style={[\n              styles.input,\n              { width: SCREEN_WIDTH - 100, height: 40 },\n              inputStyle,\n            ]}\n            {...attributes}\n          />\n          {rightIcon && (\n            <View style={[styles.iconContainer, rightIconContainerStyle]}>\n              {rightIcon}\n            </View>\n          )}\n        </Animated.View>\n        {displayError && (\n          <Text style={[styles.error, errorStyle && errorStyle]}>\n            {errorMessage || 'Error!'}\n          </Text>\n        )}\n      </View>\n    );\n  }\n}\n\nInput.propTypes = {\n  containerStyle: ViewPropTypes.style,\n\n  leftIcon: PropTypes.object,\n  leftIconContainerStyle: ViewPropTypes.style,\n\n  rightIcon: PropTypes.object,\n  rightIconContainerStyle: ViewPropTypes.style,\n\n  inputStyle: Text.propTypes.style,\n\n  shake: PropTypes.any,\n  displayError: PropTypes.bool,\n  errorStyle: Text.propTypes.style,\n  errorMessage: PropTypes.string,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderColor: 'rgba(171, 189, 219, 1)',\n    alignItems: 'center',\n  },\n  iconContainer: {\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  input: {\n    alignSelf: 'center',\n    color: 'black',\n    fontSize: 18,\n    marginLeft: 10,\n  },\n  error: {\n    color: '#FF2D00',\n    margin: 5,\n    fontSize: 12,\n  },\n});\n\nexport default Input;\n"]}