{"version":3,"sources":["../../../src/form/__tests__/FormLabel.web.test.js"],"names":["props","containerStyle","component","children","backgroundColor","padding","enzyme","tests","styleguidist","labelStyle","fontFamily","samples","Forms","sectionComponents","FormLabel","describe","it","expect","length","toBe","toMatchSnapshot"],"mappings":"AAAA,4B;AACA;AACA;AACA,4C;AACA,iF;;;;AAIA,yC;;;;;;;AAOA,uC;;AAEA,GAAMA,OAAQ;AACZC,eAAgB;AACdC,6BADc;AAEdC,SAAU,iBAFI;AAGdH,MAAO,CAAEC,eAAgB,CAAEG,gBAAiB,MAAnB,CAA2BC,QAAS,CAApC,CAAlB,CAHO;AAIdC,OAAQ;AACNC,4BADM,CAJM;;AAOdC,aAAc,EAPA,CADJ;;AAUZC,WAAY;AACVP,6BADU;AAEVC,SAAU,iBAFA;AAGVH,MAAO,CAAES,WAAY,CAAEL,gBAAiB,MAAnB,CAA2BC,QAAS,CAApC,CAAd,CAHG;AAIVC,OAAQ;AACNC,4BADM,CAJE;;AAOVC,aAAc,EAPJ,CAVA;;AAmBZE,WAAY;AACVR,6BADU;AAEVC,SAAU,iBAFA;AAGVH,MAAO,CAAEU,WAAY,aAAd,CAHG;AAIVJ,OAAQ;AACNC,4BADM,CAJE;;AAOVC,aAAc,EAPJ,CAnBA,CAAd;;;;AA8BA,GAAMG,SAAU;AACdX,WADc,CAAhB;;;AAIA;AACE;AACEY,MAAO,CAAEC,kBAAmB,CAAEC,UAAW,CAAEH,eAAF,CAAb,CAArB,CADT,CADF;;;;;AAOAI,SAAS,qBAAT,CAAgC,UAAM;AACpCC,GAAG,8BAAH,CAAmC,UAAM;AACvC,GAAMd,WAAY,oBAAQ,uDAAR,CAAlB;;AAEAe,OAAOf,UAAUgB,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,OAAO,2BAAOf,SAAP,CAAP,EAA0BkB,eAA1B;AACD,CALD;;AAOAJ,GAAG,8CAAH,CAAmD,UAAM;AACvD,GAAMd,WAAY;AAChB;AACE,eAAgB,CAAEE,gBAAiB,KAAnB,CADlB;AAEE,WAAY,CAAEA,gBAAiB,QAAnB,CAFd;AAGE,WAAW,OAHb,SADgB,CAAlB;;;;;;AAUAa,OAAOf,UAAUF,KAAV,GAAkBG,QAAlB,CAA2BH,KAA3B,CAAiCG,QAAxC,EAAkDgB,IAAlD,CAAuD,MAAvD;AACD,CAZD;AAaD,CArBD","file":"FormLabel.web.test.js","sourcesContent":["import React from 'react';\r\nimport { Text, TouchableHighlight, View } from 'react-native';\r\nimport { shallow } from 'enzyme';\r\nimport toJson from 'enzyme-to-json';\r\nimport parseSamples, {\r\n  assignRef,\r\n  genRefId,\r\n} from 'enzyme-styleguidist-sample-parser';\r\nimport options, {\r\n  snapShot,\r\n  buildJsxForGuideMethod,\r\n  ensureCalled,\r\n  onlyEnsureCalled,\r\n  onlySnapshots,\r\n} from '../../../samples';\r\nimport FormLabel from '../FormLabel';\r\n\r\nconst props = {\r\n  containerStyle: {\r\n    component: FormLabel,\r\n    children: 'enter something',\r\n    props: { containerStyle: { backgroundColor: '#2ff', padding: 5 } },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  labelStyle: {\r\n    component: FormLabel,\r\n    children: 'enter something',\r\n    props: { labelStyle: { backgroundColor: '#2ff', padding: 5 } },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n  fontFamily: {\r\n    component: FormLabel,\r\n    children: 'enter something',\r\n    props: { fontFamily: 'Courier New' },\r\n    enzyme: {\r\n      tests: onlySnapshots,\r\n    },\r\n    styleguidist: {},\r\n  },\r\n};\r\n\r\nconst samples = {\r\n  props,\r\n};\r\n\r\nparseSamples(\r\n  {\r\n    Forms: { sectionComponents: { FormLabel: { samples } } },\r\n  },\r\n  options\r\n);\r\n\r\ndescribe('FormLabel Component', () => {\r\n  it('should render without issues', () => {\r\n    const component = shallow(<FormLabel />);\r\n\r\n    expect(component.length).toBe(1);\r\n    expect(toJson(component)).toMatchSnapshot();\r\n  });\r\n\r\n  it('should show text from the FormLabel children', () => {\r\n    const component = shallow(\r\n      <FormLabel\r\n        containerStyle={{ backgroundColor: 'red' }}\r\n        labelStyle={{ backgroundColor: 'yellow' }}\r\n        fontFamily=\"arial\"\r\n      >\r\n        Name\r\n      </FormLabel>\r\n    );\r\n\r\n    expect(component.props().children.props.children).toBe('Name');\r\n  });\r\n});\r\n"]}