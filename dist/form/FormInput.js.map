{"version":3,"sources":["../../src/form/FormInput.js"],"names":["get","width","FormInput","props","getRef","input","refs","textInputRef","getRefHandler","shake","bind","shakeAnimationValue","Value","nextProps","focus","blur","clear","setValue","timing","duration","toValue","ease","bounce","start","containerStyle","inputStyle","containerRef","normalizeFontSize","attributes","translateX","interpolate","inputRange","outputRange","styles","container","transform","fontSize","propTypes","style","oneOfType","string","func","bool","object","number","array","defaultProps","create","marginLeft","marginRight","select","ios","borderBottomColor","grey4","borderBottomWidth","android","minHeight","web","color","grey3"],"mappings":"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","file":"FormInput.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n  Animated,\n  Easing,\n  TextInput,\n  StyleSheet,\n  Platform,\n  Dimensions,\n  Text as NativeText,\n} from 'react-native';\nimport colors from '../config/colors';\nimport normalize from '../helpers/normalizeText';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst { width } = Dimensions.get('window');\n\nclass FormInput extends Component {\n  constructor(props) {\n    super(props);\n    this.shake = this.shake.bind(this);\n  }\n\n  componentWillMount() {\n    this.shakeAnimationValue = new Animated.Value(0);\n    this.props.shake && this.shake();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    nextProps.shake && this.props.shake !== nextProps.shake && this.shake();\n  }\n\n  getRef = () => {\n    return this.input || this.refs[this.props.textInputRef];\n  };\n\n  getRefHandler = () => {\n    if (this.props.textInputRef) {\n      if (typeof this.props.textInputRef === 'function') {\n        return input => {\n          this.input = input;\n          this.props.textInputRef(input);\n        };\n      } else {\n        return this.props.textInputRef;\n      }\n    } else {\n      return input => (this.input = input);\n    }\n  };\n\n  focus() {\n    this.getRef() && this.getRef().focus();\n  }\n\n  blur() {\n    this.getRef() && this.getRef().blur();\n  }\n\n  clearText() {\n    this.getRef() && this.getRef().clear();\n  }\n\n  shake() {\n    const { shakeAnimationValue } = this;\n    shakeAnimationValue.setValue(0);\n    Animated.timing(shakeAnimationValue, {\n      duration: 375,\n      toValue: 3,\n      ease: Easing.bounce,\n    }).start();\n  }\n\n  render() {\n    const {\n      containerStyle,\n      inputStyle,\n      containerRef,\n      normalizeFontSize,\n      shake,\n      textInputRef,\n      ...attributes\n    } = this.props;\n    const translateX = this.shakeAnimationValue.interpolate({\n      inputRange: [0, 0.5, 1, 1.5, 2, 2.5, 3],\n      outputRange: [0, -15, 0, 15, 0, -15, 0],\n    });\n    return (\n      <Animated.View\n        ref={containerRef}\n        style={[\n          styles.container,\n          containerStyle && containerStyle,\n          {\n            transform: [{ translateX }],\n          },\n        ]}\n      >\n        <TextInput\n          {...attributes}\n          ref={this.getRefHandler()}\n          style={[\n            styles.input,\n            { fontSize: normalizeFontSize ? normalize(14) : 14 },\n            inputStyle && inputStyle,\n          ]}\n        />\n      </Animated.View>\n    );\n  }\n}\n\nFormInput.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  inputStyle: NativeText.propTypes.style,\n  // Deprecated\n  textInputRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  // Deprecated\n  containerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  normalizeFontSize: PropTypes.bool,\n  shake: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n};\n\nFormInput.defaultProps = {\n  normalizeFontSize: true,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginLeft: 15,\n    marginRight: 15,\n    ...Platform.select({\n      ios: {\n        borderBottomColor: colors.grey4,\n        borderBottomWidth: 1,\n        marginLeft: 20,\n        marginRight: 20,\n      },\n    }),\n  },\n  input: {\n    ...Platform.select({\n      android: {\n        minHeight: 46,\n        width: width - 30,\n      },\n      ios: {\n        minHeight: 36,\n        width: width,\n      },\n      web: {\n        minHeight: 36,\n        width: width,\n      },\n    }),\n    // breaks tests - fix before release\n    // Invariant Violation: Invalid undefined `width` of type `string`\n    // supplied to `StyleSheet input`, expected `number`.\n    // width: '100%',\n    color: colors.grey3,\n  },\n});\n\nexport default FormInput;\n"]}