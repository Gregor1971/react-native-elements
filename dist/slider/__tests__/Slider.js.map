{"version":3,"sources":["../../../src/slider/__tests__/Slider.js"],"names":["describe","it","component","expect","length","toBe","toMatchSnapshot","transform","scale","customFunction","jest","fn","props","value","simulate","toHaveBeenCalledTimes"],"mappings":"AAAA,4B;AACA;AACA,4C;AACA,iC;;AAEAA,SAAS,kBAAT,CAA6B,UAAM;AACjCC,GAAG,8BAAH,CAAmC,UAAM;AACvC,GAAMC,WAAY,oBAAQ,oDAAR,CAAlB;;AAEAC,OAAOD,UAAUE,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,OAAO,2BAAOD,SAAP,CAAP,EAA0BI,eAA1B;AACD,CALD;;AAOAL,GAAG,mCAAH,CAAwC,UAAM;AAC5C,GAAMC,WAAY;AAChB,gDAAQ,eAAgB,IAAxB,CAA8B,aAAc,CAA5C,CAA+C,aAAc,GAA7D,EADgB,CAAlB;;;AAIAC,OAAOD,UAAUE,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,OAAO,2BAAOD,SAAP,CAAP,EAA0BI,eAA1B;AACD,CAPD;;AASAL,GAAG,0BAAH,CAA+B,UAAM;AACnC,GAAMC,WAAY,oBAAQ,gDAAQ,YAAY,UAApB,EAAR,CAAlB;;AAEAC,OAAOD,UAAUE,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,OAAO,2BAAOD,SAAP,CAAP,EAA0BI,eAA1B;AACD,CALD;;AAOAL,GAAG,yCAAH,CAA8C,UAAM;AAClD,GAAMC,WAAY;AAChB,gDAAQ,WAAY,CAAEK,UAAW,CAAC,CAAEC,MAAO,CAAT,CAAD,CAAb,CAApB,EADgB,CAAlB;;;AAIAL,OAAOD,UAAUE,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,OAAO,2BAAOD,SAAP,CAAP,EAA0BI,eAA1B;AACD,CAPD;;AASAL,GAAG,2BAAH,CAAgC,UAAM;AACpC,GAAMQ,gBAAiBC,KAAKC,EAAL,EAAvB;AACA,GAAMT,WAAY;AAChB;AACE,MAAO,EADT;AAEE,aAAc,CAFhB;AAGE,aAAc,GAHhB;AAIE,cAAeO,cAJjB;AAKE,YAAa,IALf,EADgB,CAAlB;;;;AAUAN,OAAOD,UAAUU,KAAV,GAAkBC,KAAzB,EAAgCR,IAAhC,CAAqC,EAArC;AACAH,UAAUY,QAAV,CAAmB,aAAnB,CAAkC,EAAlC;AACAX,OAAOM,cAAP,EAAuBM,qBAAvB,CAA6C,CAA7C;AACD,CAfD;AAgBD,CAjDD","file":"Slider.js","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport toJson from 'enzyme-to-json';\nimport Slider from '../Slider';\n\ndescribe('Slider component', () => {\n  it('should render without issues', () => {\n    const component = shallow(<Slider />);\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render with ThumbTouchRect', () => {\n    const component = shallow(\n      <Slider debugTouchArea={true} minimumValue={0} maximumValue={100} />\n    );\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should render vertically', () => {\n    const component = shallow(<Slider orientation=\"vertical\" />);\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should pass down Thumb transform values', () => {\n    const component = shallow(\n      <Slider thumbStyle={{ transform: [{ scale: 2 }] }} />\n    );\n\n    expect(component.length).toBe(1);\n    expect(toJson(component)).toMatchSnapshot();\n  });\n\n  it('should call onValueChange', () => {\n    const customFunction = jest.fn();\n    const component = shallow(\n      <Slider\n        value={20}\n        minimumValue={0}\n        maximumValue={100}\n        onValueChange={customFunction}\n        allMeasured={true}\n      />\n    );\n\n    expect(component.props().value).toBe(20);\n    component.simulate('ValueChange', 30);\n    expect(customFunction).toHaveBeenCalledTimes(1);\n  });\n});\n"]}