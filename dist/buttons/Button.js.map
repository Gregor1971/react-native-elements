{"version":3,"sources":["../../src/buttons/Button.js"],"names":["log","console","Button","props","linearGradientProps","ViewComponent","error","TouchableComponent","containerStyle","onPress","buttonStyle","clear","loading","loadingStyle","loadingProps","text","textStyle","textProps","icon","iconContainerStyle","iconRight","attributes","styles","container","undefined","borderRadius","button","backgroundColor","select","android","zero","web","color","size","iconContainer","propTypes","string","style","object","bool","any","defaultProps","OS","create","justifyContent","alignItems","flexDirection","primary","four","two","padding","fontSize","textAlign","ios","fontWeight","marginHorizontal"],"mappings":"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","file":"Button.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  ActivityIndicator,\n  Platform,\n} from 'react-native';\nimport colors from '../config/colors';\n\nimport ViewPropTypes from '../config/ViewPropTypes';\nimport elevation from '../config/elevation';\n\nconst log = () => {\n  /* eslint-disable no-console */\n  console.log('Please attach a method to this component');\n};\nclass Button extends Component {\n  componentDidMount() {\n    if (\n      this.props.linearGradientProps != null &&\n      this.props.ViewComponent == null\n    ) {\n      /* eslint-disable no-console */\n      console.error(\n        `You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('expo').LinearGradient}`\n      );\n    }\n  }\n\n  render() {\n    const {\n      ViewComponent,\n      TouchableComponent,\n      containerStyle,\n      onPress,\n      buttonStyle,\n      clear,\n      loading,\n      loadingStyle,\n      loadingProps,\n      text,\n      textStyle,\n      textProps,\n      icon,\n      iconContainerStyle,\n      iconRight,\n      linearGradientProps,\n      ...attributes\n    } = this.props;\n\n    return (\n      <View style={[styles.container, containerStyle]}>\n        <TouchableComponent\n          onPress={onPress}\n          activeOpacity={clear ? 0 : undefined}\n          style={{\n            borderRadius: buttonStyle.borderRadius,\n          }}\n          {...attributes}\n        >\n          <ViewComponent\n            {...linearGradientProps}\n            style={[\n              styles.button,\n              clear && {\n                backgroundColor: 'transparent',\n                ...Platform.select({\n                  android: elevation.android.zero,\n                  web: elevation.web.zero,\n                }),\n              },\n              buttonStyle,\n              linearGradientProps && { backgroundColor: 'transparent' },\n            ]}\n          >\n            {loading && (\n              <ActivityIndicator\n                animating={true}\n                style={[styles.loading, loadingStyle]}\n                color={loadingProps.color}\n                size={loadingProps.size}\n                {...loadingProps}\n              />\n            )}\n            {!loading &&\n              icon &&\n              !iconRight && (\n                <View style={[styles.iconContainer, iconContainerStyle]}>\n                  {icon}\n                </View>\n              )}\n            {!loading && (\n              <Text style={[styles.text, textStyle]} {...textProps}>\n                {text}\n              </Text>\n            )}\n            {!loading &&\n              icon &&\n              iconRight && (\n                <View style={[styles.iconContainer, iconContainerStyle]}>\n                  {icon}\n                </View>\n              )}\n          </ViewComponent>\n        </TouchableComponent>\n      </View>\n    );\n  }\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n  textStyle: Text.propTypes.style,\n  textProps: PropTypes.object,\n  buttonStyle: ViewPropTypes.style,\n  clear: PropTypes.bool,\n  loading: PropTypes.bool,\n  loadingStyle: ViewPropTypes.style,\n  loadingProps: PropTypes.object,\n  onPress: PropTypes.any,\n  containerStyle: ViewPropTypes.style,\n  icon: PropTypes.object,\n  iconContainerStyle: ViewPropTypes.style,\n  iconRight: PropTypes.bool,\n  linearGradientProps: PropTypes.object,\n  TouchableComponent: PropTypes.any,\n  ViewComponent: PropTypes.any,\n};\n\nButton.defaultProps = {\n  iconRight: false,\n  TouchableComponent:\n    Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity,\n  ViewComponent: View,\n  onPress: log,\n  clear: false,\n  loadingProps: {\n    color: 'white',\n    size: 'small',\n  },\n  buttonStyle: {\n    borderRadius: 3,\n  },\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 30,\n  },\n  button: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 3,\n    backgroundColor: colors.primary,\n    ...Platform.select({\n      android: {\n        ...elevation.android.four,\n        borderRadius: 2,\n      },\n      web: {\n        ...elevation.web.two,\n      },\n    }),\n  },\n  loading: {\n    padding: 8,\n  },\n  text: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center',\n    padding: 8,\n    ...Platform.select({\n      ios: {\n        fontSize: 18,\n      },\n      android: {\n        fontWeight: '500',\n      },\n    }),\n  },\n  iconContainer: {\n    marginHorizontal: 5,\n  },\n});\n\nexport default Button;\n"]}