// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input: Slider: [ prop: animateTransitions ] enzyme-mount: snapshot 1`] = `
<Slider
  animateTransitions={true}
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: animateTransitions ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: animateTransitions ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: animationConfig ] enzyme-mount: snapshot 1`] = `
<Slider
  animateTransitions={true}
  animationConfig={
    Object {
      "friction": 10,
      "tension": 11,
    }
  }
  animationType="spring"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: animationConfig ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: animationConfig ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: animationType ] enzyme-mount: snapshot 1`] = `
<Slider
  animateTransitions={true}
  animationType="spring"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: animationType ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: animationType ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: debugTouchArea ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={true}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                    AnimatedStyle {
                      "_children": Array [
                        AnimatedProps {
                          "_callback": [Function],
                          "_props": Object {
                            "pointerEvents": "none",
                            "style": [Circular],
                          },
                        },
                      ],
                      "_style": Object {
                        "height": 40,
                        "left": [Circular],
                        "top": NaN,
                        "width": 40,
                      },
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                      AnimatedStyle {
                        "_children": Array [
                          AnimatedProps {
                            "_callback": [Function],
                            "_props": Object {
                              "pointerEvents": "none",
                              "style": [Circular],
                            },
                          },
                        ],
                        "_style": Object {
                          "height": 40,
                          "left": [Circular],
                          "top": NaN,
                          "width": 40,
                        },
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {
              "backgroundColor": "orange",
              "opacity": 0.5,
            },
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-icoktb rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          style={
            Object {
              "backgroundColor": "orange",
            }
          }
        >
          <AnimatedComponent
            pointerEvents="none"
            style={
              Object {
                "height": 40,
                "left": AnimatedInterpolation {
                  "_children": Array [
                    AnimatedAddition {
                      "_a": [Circular],
                      "_b": AnimatedValue {
                        "_animation": null,
                        "_children": Array [
                          [Circular],
                        ],
                        "_listeners": Object {},
                        "_offset": 0,
                        "_value": 0,
                      },
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "#3f3f3f",
                            "borderRadius": 2,
                            "height": 4,
                            "opacity": 0,
                            "position": "absolute",
                            "width": [Circular],
                          },
                        },
                      ],
                      "_listeners": Object {},
                    },
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                    AnimatedStyle {
                      "_children": Array [
                        AnimatedProps {
                          "_callback": [Function],
                          "_props": Object {
                            "pointerEvents": "none",
                            "style": [Circular],
                          },
                        },
                      ],
                      "_style": [Circular],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "top": NaN,
                "width": 40,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 40,
                  "left": 0,
                  "top": NaN,
                  "width": 40,
                }
              }
            >
              <div
                className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-pointerEvents-633pao rn-position-bnwqim"
                style={
                  Object {
                    "top": "NaNpx",
                    "width": "40px",
                  }
                }
              />
            </View>
          </AnimatedComponent>
        </div>
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: debugTouchArea ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-icoktb rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
    style="background-color:orange;"
  >
    <div
      class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-pointerEvents-633pao rn-position-bnwqim"
      style="top:NaNpx;width:40px;"
    />
  </div>
</div>
`;

exports[`Input: Slider: [ prop: debugTouchArea ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {
          "backgroundColor": "orange",
          "opacity": 0.5,
        },
      ]
    }
  >
    <AnimatedComponent
      pointerEvents="none"
      style={
        Object {
          "height": 40,
          "left": AnimatedInterpolation {
            "_children": Array [],
            "_interpolation": [Function],
            "_listeners": Object {},
            "_parent": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
          },
          "top": NaN,
          "width": 40,
        }
      }
    />
  </View>
</View>
`;

exports[`Input: Slider: [ prop: maximumTrackTintColor ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#071"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#071",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(0,119,17,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: maximumTrackTintColor ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(0,119,17,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: maximumTrackTintColor ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#071",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: maximumValue ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={0.7}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: maximumValue ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: maximumValue ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: minimumTrackTintColor ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#071"
  minimumValue={0}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#071",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#071",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#071",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(0,119,17,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#071",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: minimumTrackTintColor ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(0,119,17,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: minimumTrackTintColor ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#071",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: minimumValue ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0.2}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0.7}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0.7}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0.7}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0.7,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0.7,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: minimumValue ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0.7"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: minimumValue ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0.7}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0.7,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0.7,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: no props ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: no props ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: no props ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: onSlidingComplete ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  onSlidingComplete={[Function]}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: onSlidingComplete ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: onSlidingComplete ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: onSlidingStart ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  onSlidingStart={[Function]}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: onSlidingStart ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: onSlidingStart ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: onValueChange ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  onValueChange={[Function]}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    onValueChange={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      onValueChange={[Function]}
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: onValueChange ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: onValueChange ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  onValueChange={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: step ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0.25}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0.25}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0.25}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: step ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0.25"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: step ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0.25}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: style ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0}
  style={
    Object {
      "borderWidth": 5,
    }
  }
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        Object {
          "borderWidth": 5,
        },
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      style={
        Object {
          "borderBottomWidth": "5px",
          "borderLeftWidth": "5px",
          "borderRightWidth": "5px",
          "borderTopWidth": "5px",
        }
      }
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: style ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  style="border-top-width:5px;border-right-width:5px;border-bottom-width:5px;border-left-width:5px;"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: style ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      Object {
        "borderWidth": 5,
      },
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: thumbStyle ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0}
  thumbStyle={
    Object {
      "height": 100,
      "width": 100,
    }
  }
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 100,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 100,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            Object {
              "height": 100,
              "width": 100,
            },
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 100,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 100,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 100,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 100,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "height": "100px",
                "transform": "translateX(0px) translateY(0px)",
                "width": "100px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: thumbStyle ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu"
    style="background-color:red;height:100px;transform:translateX(0px) translateY(0px);width:100px;-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: thumbStyle ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        Object {
          "height": 100,
          "width": 100,
        },
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: thumbTouchSize ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={true}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 100,
      "width": 100,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                    AnimatedStyle {
                      "_children": Array [
                        AnimatedProps {
                          "_callback": [Function],
                          "_props": Object {
                            "pointerEvents": "none",
                            "style": [Circular],
                          },
                        },
                      ],
                      "_style": Object {
                        "height": 100,
                        "left": [Circular],
                        "top": NaN,
                        "width": 100,
                      },
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                      AnimatedStyle {
                        "_children": Array [
                          AnimatedProps {
                            "_callback": [Function],
                            "_props": Object {
                              "pointerEvents": "none",
                              "style": [Circular],
                            },
                          },
                        ],
                        "_style": Object {
                          "height": 100,
                          "left": [Circular],
                          "top": NaN,
                          "width": 100,
                        },
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {
              "backgroundColor": "orange",
              "opacity": 0.5,
            },
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-icoktb rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          style={
            Object {
              "backgroundColor": "orange",
            }
          }
        >
          <AnimatedComponent
            pointerEvents="none"
            style={
              Object {
                "height": 100,
                "left": AnimatedInterpolation {
                  "_children": Array [
                    AnimatedAddition {
                      "_a": [Circular],
                      "_b": AnimatedValue {
                        "_animation": null,
                        "_children": Array [
                          [Circular],
                        ],
                        "_listeners": Object {},
                        "_offset": 0,
                        "_value": 0,
                      },
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "#3f3f3f",
                            "borderRadius": 2,
                            "height": 4,
                            "opacity": 0,
                            "position": "absolute",
                            "width": [Circular],
                          },
                        },
                      ],
                      "_listeners": Object {},
                    },
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                    AnimatedStyle {
                      "_children": Array [
                        AnimatedProps {
                          "_callback": [Function],
                          "_props": Object {
                            "pointerEvents": "none",
                            "style": [Circular],
                          },
                        },
                      ],
                      "_style": [Circular],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "top": NaN,
                "width": 100,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 100,
                  "left": 0,
                  "top": NaN,
                  "width": 100,
                }
              }
            >
              <div
                className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-pointerEvents-633pao rn-position-bnwqim"
                style={
                  Object {
                    "height": "100px",
                    "top": "NaNpx",
                    "width": "100px",
                  }
                }
              />
            </View>
          </AnimatedComponent>
        </div>
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: thumbTouchSize ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-icoktb rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
    style="background-color:orange;"
  >
    <div
      class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-pointerEvents-633pao rn-position-bnwqim"
      style="height:100px;top:NaNpx;width:100px;"
    />
  </div>
</div>
`;

exports[`Input: Slider: [ prop: thumbTouchSize ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {
          "backgroundColor": "orange",
          "opacity": 0.5,
        },
      ]
    }
  >
    <AnimatedComponent
      pointerEvents="none"
      style={
        Object {
          "height": 100,
          "left": AnimatedInterpolation {
            "_children": Array [],
            "_interpolation": [Function],
            "_listeners": Object {},
            "_parent": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
          },
          "top": NaN,
          "width": 100,
        }
      }
    />
  </View>
</View>
`;

exports[`Input: Slider: [ prop: trackStyle ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  trackStyle={
    Object {
      "borderWidth": 5,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            Object {
              "borderWidth": 5,
            },
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
              "borderBottomWidth": "5px",
              "borderLeftWidth": "5px",
              "borderRightWidth": "5px",
              "borderTopWidth": "5px",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            Object {
              "borderWidth": 5,
            },
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "borderWidth": 5,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "borderWidth": 5,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "borderBottomWidth": "5px",
                "borderLeftWidth": "5px",
                "borderRightWidth": "5px",
                "borderTopWidth": "5px",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "borderWidth": 5,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: trackStyle ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);border-top-width:5px;border-right-width:5px;border-bottom-width:5px;border-left-width:5px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);border-top-width:5px;border-right-width:5px;border-bottom-width:5px;border-left-width:5px;width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: trackStyle ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        Object {
          "borderWidth": 5,
        },
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        Object {
          "borderWidth": 5,
        },
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;

exports[`Input: Slider: [ prop: value ] enzyme-mount: snapshot 1`] = `
<Slider
  animationType="timing"
  debugTouchArea={false}
  maximumTrackTintColor="#b3b3b3"
  maximumValue={1}
  minimumTrackTintColor="#3f3f3f"
  minimumValue={0}
  step={0}
  thumbTintColor="red"
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0.7}
>
  <View
    onLayout={[Function]}
    step={0}
    style={
      Array [
        106,
        undefined,
      ]
    }
    value={0.7}
  >
    <div
      className="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
      step={0}
      value={0.7}
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#b3b3b3",
            },
            107,
            undefined,
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
          style={
            Object {
              "backgroundColor": "rgba(179,179,179,1)",
            }
          }
        />
      </View>
      <AnimatedComponent
        style={
          Array [
            107,
            undefined,
            Object {
              "backgroundColor": "#3f3f3f",
              "opacity": 0,
              "position": "absolute",
              "width": AnimatedAddition {
                "_a": AnimatedInterpolation {
                  "_children": Array [
                    [Circular],
                    AnimatedTransform {
                      "_children": Array [
                        AnimatedStyle {
                          "_children": Array [
                            AnimatedProps {
                              "_callback": [Function],
                              "_props": Object {
                                "onLayout": [Function],
                                "style": [Circular],
                              },
                            },
                          ],
                          "_style": Object {
                            "backgroundColor": "red",
                            "borderRadius": 10,
                            "height": 20,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 22,
                            "transform": [Circular],
                            "width": 20,
                          },
                        },
                      ],
                      "_transforms": Array [
                        Object {
                          "translateX": [Circular],
                        },
                        Object {
                          "translateY": -0,
                        },
                      ],
                    },
                  ],
                  "_interpolation": [Function],
                  "_listeners": Object {},
                  "_parent": AnimatedValue {
                    "_animation": null,
                    "_children": Array [
                      [Circular],
                    ],
                    "_listeners": Object {},
                    "_offset": 0,
                    "_value": 0.7,
                  },
                },
                "_b": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "backgroundColor": "#3f3f3f",
                      "borderRadius": 2,
                      "height": 4,
                      "opacity": 0,
                      "position": "absolute",
                      "width": [Circular],
                    },
                  },
                ],
                "_listeners": Object {},
              },
            },
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#3f3f3f",
              "borderRadius": 2,
              "height": 4,
              "opacity": 0,
              "position": "absolute",
              "width": 0,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
            style={
              Object {
                "backgroundColor": "rgba(63,63,63,1)",
                "width": "0px",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <AnimatedComponent
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "red",
            },
            108,
            undefined,
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": AnimatedInterpolation {
                    "_children": Array [
                      AnimatedAddition {
                        "_a": [Circular],
                        "_b": AnimatedValue {
                          "_animation": null,
                          "_children": Array [
                            [Circular],
                          ],
                          "_listeners": Object {},
                          "_offset": 0,
                          "_value": 0,
                        },
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "#3f3f3f",
                              "borderRadius": 2,
                              "height": 4,
                              "opacity": 0,
                              "position": "absolute",
                              "width": [Circular],
                            },
                          },
                        ],
                        "_listeners": Object {},
                      },
                      AnimatedTransform {
                        "_children": Array [
                          AnimatedStyle {
                            "_children": Array [
                              AnimatedProps {
                                "_callback": [Function],
                                "_props": Object {
                                  "onLayout": [Function],
                                  "style": [Circular],
                                },
                              },
                            ],
                            "_style": Object {
                              "backgroundColor": "red",
                              "borderRadius": 10,
                              "height": 20,
                              "opacity": 0,
                              "position": "absolute",
                              "top": 22,
                              "transform": [Circular],
                              "width": 20,
                            },
                          },
                        ],
                        "_transforms": [Circular],
                      },
                    ],
                    "_interpolation": [Function],
                    "_listeners": Object {},
                    "_parent": AnimatedValue {
                      "_animation": null,
                      "_children": Array [
                        [Circular],
                      ],
                      "_listeners": Object {},
                      "_offset": 0,
                      "_value": 0.7,
                    },
                  },
                },
                Object {
                  "translateY": -0,
                },
              ],
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "red",
              "borderRadius": 10,
              "height": 20,
              "opacity": 0,
              "position": "absolute",
              "top": 22,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": -0,
                },
              ],
              "width": 20,
            }
          }
        >
          <div
            className="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
            style={
              Object {
                "WebkitTransform": "translateX(0px) translateY(0px)",
                "backgroundColor": "red",
                "transform": "translateX(0px) translateY(0px)",
              }
            }
          />
        </View>
      </AnimatedComponent>
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Array [
            109,
            Object {},
          ]
        }
      >
        <div
          className="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
        />
      </View>
    </div>
  </View>
</Slider>
`;

exports[`Input: Slider: [ prop: value ] enzyme-render: snapshot 1`] = `
<div
  class="rn-alignItems-1oszu61 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
  step="0"
  value="0.7"
>
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim"
    style="background-color:rgba(179,179,179,1);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-hdaws3 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d"
    style="background-color:rgba(63,63,63,1);width:0px;"
  />
  <div
    class="rn-alignItems-1oszu61 rn-borderTopLeftRadius-j9b53g rn-borderTopRightRadius-1i97xy8 rn-borderBottomRightRadius-tabonr rn-borderBottomLeftRadius-shm4j rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-z80fyv rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-opacity-1272l3b rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-top-18kv9lu rn-width-19wmn03"
    style="background-color:red;transform:translateX(0px) translateY(0px);-webkit-transform:translateX(0px) translateY(0px);"
  />
  <div
    class="rn-alignItems-1oszu61 rn-backgroundColor-wib322 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-bottom-1p0dtai rn-boxSizing-deolkf rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-left-1d2f490 rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-minHeight-ifefl9 rn-minWidth-bcqeeo rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-u8s1d rn-right-zchlnj rn-top-ipm5af"
  />
</div>
`;

exports[`Input: Slider: [ prop: value ] enzyme-shallow: snapshot 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      106,
      undefined,
    ]
  }
  value={0.7}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        107,
        undefined,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        107,
        undefined,
        Object {
          "backgroundColor": "#3f3f3f",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0.7,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "red",
        },
        108,
        undefined,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0.7,
                },
              },
            },
            Object {
              "translateY": -0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        109,
        Object {},
      ]
    }
  />
</View>
`;
